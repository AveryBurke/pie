{"mappings":"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AmB,oBAAoB,CAAC,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,oBAAoB,oBAAoB,qBAAqB,CAAC,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,gBAAgB,gBAAgB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,oBAAoB,qBAAqB,CAAC,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,qBAAqB,CAAC,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,oBAAoB,oBAAoB,oBAAoB,oBAAo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","sources":["src/workers/backgroundWorker.ts","node_modules/d3-interpolate/src/value.js","node_modules/d3-interpolate/src/numberArray.js","node_modules/d3-interpolate/src/array.js","node_modules/d3-interpolate/src/date.js","node_modules/d3-interpolate/src/object.js","src/static/queue.ts","node_modules/svg-path-properties/dist/svg-path-properties.esm.js","node_modules/earcut/src/earcut.js"],"sourcesContent":["import { select } from \"d3-selection\";\nimport { interpolate } from \"d3-interpolate\";\nimport { arc } from \"d3-shape\";\nimport { Queue } from '../static/queue'\nimport renderBackground from \"../d3/renderBackground\"\nimport { svgPathProperties } from \"svg-path-properties\"\nimport earcut from \"earcut\";\n// @ts-ignore\nimport xmldom from \"../domparser_bundle\";\n\nconst DOMImplementation = xmldom.DOMImplementation;\n\nconst backgroundWorker: Worker = self as any\n\nclass worker {\n    background: ReturnType<typeof renderBackground> = renderBackground()\n    ctx: OffscreenCanvasRenderingContext2D | null = null\n    canvasHeight = 0\n    canvasWidth = 0\n    dom: Document = new DOMImplementation().createDocument()\n    ratio = 2\n    generator = arc()\n    ringSet: string[] = []\n    ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } } = {}\n    sliceSet: string[] = []\n    sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } } = {}\n    sliceColors: { [slice: string]: string[] } = {}\n    path = arc()({ innerRadius: 50, outerRadius: 300, startAngle: 0, endAngle: 97 * Math.PI / 180 })\n    poly = [10, 0, 0, 50, 60, 60, 70, 10]\n    setContext(ctx: OffscreenCanvasRenderingContext2D) {\n        this.ctx = ctx\n    }\n\n    setDimensions(w: number, h: number, r: number) {\n        this.canvasWidth = w\n        this.canvasHeight = h\n        this.ratio = r\n    }\n\n    draw() {\n        const { ctx, canvasWidth, canvasHeight, ratio, path, poly } = this\n        if (ctx) {\n            ctx.save();\n            ctx.clearRect(0, 0, Math.floor(canvasWidth * ratio), Math.floor(canvasHeight * ratio));\n            ctx.lineWidth = .75;\n            ctx.setTransform(ratio, 0, 0, ratio, Math.floor(canvasWidth * ratio) / 2, Math.floor(canvasHeight * ratio) / 2)\n            select(this.dom).selectAll(\"custom.section\").each(function (d: any, i) {\n                const path = select(this).select('path'),\n                    id = select(this).attr('id'),\n                    fill = path.attr('fill'),\n                    opacity = +path.attr('opacity'),\n                    svgPath = path.attr('d')\n                ctx.strokeStyle = '#000000'\n                ctx.fillStyle = fill\n                ctx.globalAlpha = .9 //<-- make the background a little opaqu so the shapes stand out\n                if (svgPath && ctx && !id.includes('_border')) {\n                    ctx.stroke(new Path2D(svgPath))\n                    ctx.fill(new Path2D(svgPath))\n                }\n            })\n            ctx.globalAlpha = 1\n            ctx.stroke()\n            ctx.restore()\n        }\n    }\n\n\n\n\n    generateArcs() {\n        const { ringSet, ringHeights, sliceSet, sliceColors, sliceAngles } = this\n        return sliceSet.reduce<Section[]>((acc, slice) => {\n            if (sliceAngles[slice]) {\n                const { startAngle, endAngle } = sliceAngles[slice]!\n                const sections = ringSet.reduce<Section[]>((acc, ring, j) => {\n                    if (ringHeights[ring]) {\n                        const { innerRadius, outerRadius } = ringHeights[ring]!\n                        const id = `_${slice}_${ring}`\n                        const slicePallet = sliceColors[slice]!\n                        const fill = slicePallet[j % slicePallet.length]!\n                        const arc = { id, innerRadius, outerRadius, startAngle, endAngle, fill }\n                        const border = { id: id + '_border', innerRadius: innerRadius + 5, outerRadius: outerRadius - 5, startAngle: startAngle + 5 * Math.PI / 180, endAngle: endAngle - 5 * Math.PI / 180, fill: 'black' }\n                        acc = [...acc, arc, border]\n                    }\n                    return acc\n                }, [])\n                acc = [...acc, ...sections]\n            }\n            return acc\n        }, [])\n\n    }\n\n    initChart(ringSet: string[], ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } }, sliceSet: string[], sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }, sliceColors: { [slice: string]: string[] }) {\n        const queue = new Queue<QueueTask>()\n        this.sliceColors = sliceColors\n        this.ringSet = ringSet\n        this.ringHeights = ringHeights\n        this.sliceSet = sliceSet\n        this.sliceAngles = sliceAngles\n        const initialSections: Section[] = sliceSet.flatMap((slice, i) => {\n            const { startAngle, endAngle } = sliceAngles[slice]!\n            return ringSet.map((ring, j) => {\n                const { innerRadius, outerRadius } = ringHeights[ring]!\n                const id = `_${slice}_${ring}`\n                const slicePallet = sliceColors[slice]!\n                const fill = slicePallet[j % slicePallet.length]!\n                return { id, innerRadius, outerRadius, startAngle, endAngle, fill }\n            })\n        })\n\n        queue.enqueue({ type: \"sections\", input: initialSections })\n\n        select(this.dom)\n            .call(\n                this.background\n                    .queue(queue)\n                    .generator(arc())\n                    .interpolator(interpolate)\n                    .draw(() => this.draw())\n            )\n    }\n\n    updateSliceAngles(sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }) {\n        this.sliceAngles = sliceAngles\n        this.generateArcs()\n    }\n\n    updateSliceSet(sliceSet: string[], sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }, sliceColors: { [key: string]: string[] }) {\n        const { sliceSet: oldSliceSet } = this\n        this.sliceSet = sliceSet\n        this.sliceColors = sliceColors\n        if (oldSliceSet.length === 0) {\n            this.sliceAngles = Object.fromEntries(sliceSet.map(slice => [slice, { startAngle: 0, endAngle: 0 }]))\n            const startSlices: QueueTask = { type: \"sections\", input: this.generateArcs() }\n            this.background.enqueue(startSlices)\n        }\n        this.sliceAngles = sliceAngles\n        this.getPathPoints()\n        const endSlices: QueueTask = { type: \"sections\", input: this.generateArcs() }\n        this.background.enqueue(endSlices)\n        this.background.dequeue()\n        // this.getPathPoints()\n    }\n\n    removeSlices() {\n        //enqueue the transition, but don't dequeue it\n        const { sliceSet } = this\n        const outGointSliceAngles = Object.fromEntries(sliceSet.map(slice => [slice, { startAngle: 2 * Math.PI, endAngle: 2 * Math.PI }]))\n        this.sliceAngles = outGointSliceAngles\n        const leavingArcs: QueueTask = { type: \"sections\", input: this.generateArcs() }\n        this.background.enqueue({ type: 'duration', input: 400 })\n        this.background.enqueue(leavingArcs)\n        this.sliceSet = []\n    }\n\n    updateRingSet(ringSet: string[], ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } }) {\n        const { ringSet: oldRingSet } = this\n        this.ringSet = ringSet\n        if (oldRingSet.length === 0) {\n            this.background.enqueue({ type: 'duration', input: 400 / ringSet.length })\n            const startingHeights = Object.fromEntries(ringSet.map(ring => [ring, { innerRadius: 0, outerRadius: 0 }]))\n            this.ringHeights = startingHeights\n            this.background.enqueue({ type: 'sections', input: this.generateArcs() })\n            ringSet.forEach((ring, i) => {\n                const intermediateRingSet = ringSet.slice(i)\n                const { innerRadius, outerRadius } = ringHeights[ring]!\n                this.ringHeights[ring] = { innerRadius, outerRadius }\n                intermediateRingSet.forEach(ring => this.ringHeights[ring] = { innerRadius, outerRadius })\n                const arcsWIthRing = this.generateArcs()\n                this.background.enqueue({ type: 'sections', input: arcsWIthRing })\n            })\n        }\n        this.ringHeights = ringHeights\n        this.background.enqueue({ type: \"sections\", input: this.generateArcs() })\n        this.background.dequeue()\n        this.getPathPoints()\n    }\n\n    removeRings() {\n        const { ringSet } = this\n        this.background.enqueue({ type: 'duration', input: 400 / ringSet.length })\n        ringSet.forEach((ring, i) => {\n            const { outerRadius } = this.ringHeights[ring]!\n            this.ringHeights[ring] = { innerRadius: outerRadius, outerRadius }\n            const arcsWIthRing = this.generateArcs()\n            this.background.enqueue({ type: 'sections', input: arcsWIthRing })\n            this.ringSet = ringSet.slice(i)\n            delete this.ringHeights[ring]\n        })\n        this.ringSet = []\n    }\n\n    getPathPoints() {\n        const { generator } = this\n        const sectionCoords: { [id: string]: [number, number][] } = {}\n        const sectionVerts: { [id: string]: [number, number][] } = {}\n        const arcs = this.generateArcs() //<--NOTE: destrcutring the method from \"this\" causes an error. look into that\n        arcs.forEach(function (d, i) {\n            if (d.id.includes('_border')) {\n                // triangulate the boarder polygon\n                const path = generator(d) || \"\",\n                    num_points = 100,\n                    points: number[] = [],\n                    pathProperties = new svgPathProperties(path),\n                    pathLength = pathProperties.getTotalLength()\n                for (let i = 0; i < num_points; ++i) {\n                    let { x, y } = pathProperties.getPointAtLength(i * pathLength / (num_points - 1))\n                    points.push(x)\n                    points.push(y)\n                }\n                const ears = earcut(points),//<--returns the indexes of x coordinates of the triangle vertices in the points array\n                    //fetch the coordiantes of the triangle vertices from the points array\n                    vertices = ears.reduce<[number, number][]>((acc, index) => {\n                        const i = index * 2\n                        return [...acc, [points[i]!, points[i + 1]!]]\n                    }, [])\n                sectionVerts[d.id] = vertices\n\n                //seed the positions within the boarder polygon\n                const coords: [number, number][] = []\n                for (let i = 0; i < 200; ++i) {\n                    const { startAngle, endAngle, innerRadius, outerRadius, id } = d\n                    if (id.includes('_border')) {\n                        const randomClampedR = Math.random() * (outerRadius - innerRadius) + innerRadius,\n                            randomClampedTheta = (Math.random() * (endAngle - startAngle) + startAngle) - Math.PI / 2,\n                            x = Math.cos(randomClampedTheta) * randomClampedR,\n                            y = Math.sin(randomClampedTheta) * randomClampedR\n                        coords.push([x, y])\n                    }\n                }\n                sectionCoords[d.id] = coords\n            }\n        })\n        self.postMessage({ sectionVerts, sectionCoords })\n    }\n}\n\nconst brw = new worker()\n\nself.addEventListener('message', msg => {\n    const {\n        type,\n        canvas,\n        w,\n        h,\n        r,\n        ringSet,\n        ringHeights,\n        sliceSet,\n        sliceAngles,\n        sliceColors\n    }:\n        {\n            type: string,\n            canvas?: OffscreenCanvas,\n            w?: number,\n            h?: number,\n            r?: number,\n            ringSet?: string[],\n            sliceSet?: string[],\n            ringHeights?: { [ring: string]: { innerRadius: number, outerRadius: number } }\n            sliceAngles?: { [slice: string]: { startAngle: number, endAngle: number } }\n            sliceColors?: { [slice: string]: string[] }\n        } = msg.data\n        \n    if (type === 'set_ctx' && canvas) {\n        const ctx = canvas.getContext('2d')\n        brw.setContext(ctx!)\n    }\n    if (type === 'set_dimensions' && w && h && r) {\n        brw.setDimensions(w, h, r)\n    }\n    if (type === 'init_chart' && ringSet && ringHeights && sliceSet && sliceAngles && sliceColors) {\n        brw.initChart(ringSet, ringHeights, sliceSet, sliceAngles, sliceColors)\n    }\n    if (type === 'update_slice_set' && sliceSet && sliceAngles && sliceColors) {\n        brw.updateSliceSet(sliceSet, sliceAngles, sliceColors)\n    }\n    if (type === 'update_ring_set' && ringSet && ringHeights) {\n        brw.updateRingSet(ringSet, ringHeights)\n    }\n    if (type === 'remove_rings') {\n        brw.removeRings()\n    }\n    if (type === 'remove_slices') {\n        brw.removeSlices()\n    }\n})","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","//this is probbaly overkill, but I want a real queue\nexport class Queue<T> implements QueueInterface<T> {\n    _oldestIndex = 1\n    _newestIndex = 1\n    _storage:{[index:number]:T} = {}\n\n    size(){\n        return this._newestIndex - this._oldestIndex\n    }\n\n    enqueue(datum:T){\n        this._storage[this._newestIndex] = datum\n        this._newestIndex++\n    }\n\n    dequeue(){\n        let oldestIndex = this._oldestIndex,\n        newestIndex = this._newestIndex,\n        deletedData;\n\n    if (oldestIndex !== newestIndex) {\n        deletedData = this._storage[oldestIndex];\n        delete this._storage[oldestIndex];\n        this._oldestIndex++;\n        return deletedData;\n    }\n    }\n}","// http://geoexamples.com/path-properties/ v1.0.13 Copyright 2022 Roger Veciana i Rovira\nfunction t(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function n(t){return function(t){if(Array.isArray(t))return e(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,n){if(!t)return;if(\"string\"==typeof t)return e(t,n);var i=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===i&&t.constructor&&(i=t.constructor.name);if(\"Map\"===i||\"Set\"===i)return Array.from(t);if(\"Arguments\"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return e(t,n)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function e(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,i=new Array(n);e<n;e++)i[e]=t[e];return i}var i={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},h=/([astvzqmhlc])([^astvzqmhlc]*)/gi,r=/-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi,s=function(t){var n=t.match(r);return n?n.map(Number):[]},a=function(n,e,i,h){var r=this;t(this,\"x0\",void 0),t(this,\"x1\",void 0),t(this,\"y0\",void 0),t(this,\"y1\",void 0),t(this,\"getTotalLength\",(function(){return Math.sqrt(Math.pow(r.x0-r.x1,2)+Math.pow(r.y0-r.y1,2))})),t(this,\"getPointAtLength\",(function(t){var n=t/Math.sqrt(Math.pow(r.x0-r.x1,2)+Math.pow(r.y0-r.y1,2));n=Number.isNaN(n)?1:n;var e=(r.x1-r.x0)*n,i=(r.y1-r.y0)*n;return{x:r.x0+e,y:r.y0+i}})),t(this,\"getTangentAtLength\",(function(t){var n=Math.sqrt((r.x1-r.x0)*(r.x1-r.x0)+(r.y1-r.y0)*(r.y1-r.y0));return{x:-(r.x1-r.x0)/n,y:-(r.y1-r.y0)/n}})),t(this,\"getPropertiesAtLength\",(function(t){var n=r.getPointAtLength(t),e=r.getTangentAtLength(t);return{x:n.x,y:n.y,tangentX:e.x,tangentY:e.y}})),this.x0=n,this.x1=e,this.y0=i,this.y1=h},o=function(n,e,i,h,r,s,a,o,l){var c=this;t(this,\"x0\",void 0),t(this,\"y0\",void 0),t(this,\"rx\",void 0),t(this,\"ry\",void 0),t(this,\"xAxisRotate\",void 0),t(this,\"LargeArcFlag\",void 0),t(this,\"SweepFlag\",void 0),t(this,\"x1\",void 0),t(this,\"y1\",void 0),t(this,\"length\",void 0),t(this,\"getTotalLength\",(function(){return c.length})),t(this,\"getPointAtLength\",(function(t){t<0?t=0:t>c.length&&(t=c.length);var n=g({x:c.x0,y:c.y0},c.rx,c.ry,c.xAxisRotate,c.LargeArcFlag,c.SweepFlag,{x:c.x1,y:c.y1},t/c.length);return{x:n.x,y:n.y}})),t(this,\"getTangentAtLength\",(function(t){t<0?t=0:t>c.length&&(t=c.length);var n,e=.05,i=c.getPointAtLength(t);t<0?t=0:t>c.length&&(t=c.length);var h=(n=t<c.length-e?c.getPointAtLength(t+e):c.getPointAtLength(t-e)).x-i.x,r=n.y-i.y,s=Math.sqrt(h*h+r*r);return t<c.length-e?{x:-h/s,y:-r/s}:{x:h/s,y:r/s}})),t(this,\"getPropertiesAtLength\",(function(t){var n=c.getTangentAtLength(t),e=c.getPointAtLength(t);return{x:e.x,y:e.y,tangentX:n.x,tangentY:n.y}})),this.x0=n,this.y0=e,this.rx=i,this.ry=h,this.xAxisRotate=r,this.LargeArcFlag=s,this.SweepFlag=a,this.x1=o,this.y1=l;var f=u(300,(function(t){return g({x:n,y:e},i,h,r,s,a,{x:o,y:l},t)}));this.length=f.arcLength},g=function(t,n,e,i,h,r,s,a){n=Math.abs(n),e=Math.abs(e),i=l(i,360);var o=c(i);if(t.x===s.x&&t.y===s.y)return{x:t.x,y:t.y,ellipticalArcAngle:0};if(0===n||0===e)return{x:0,y:0,ellipticalArcAngle:0};var g=(t.x-s.x)/2,u=(t.y-s.y)/2,f={x:Math.cos(o)*g+Math.sin(o)*u,y:-Math.sin(o)*g+Math.cos(o)*u},y=Math.pow(f.x,2)/Math.pow(n,2)+Math.pow(f.y,2)/Math.pow(e,2);y>1&&(n=Math.sqrt(y)*n,e=Math.sqrt(y)*e);var p=(Math.pow(n,2)*Math.pow(e,2)-Math.pow(n,2)*Math.pow(f.y,2)-Math.pow(e,2)*Math.pow(f.x,2))/(Math.pow(n,2)*Math.pow(f.y,2)+Math.pow(e,2)*Math.pow(f.x,2));p=p<0?0:p;var v=(h!==r?1:-1)*Math.sqrt(p),M=v*(n*f.y/e),L=v*(-e*f.x/n),w={x:Math.cos(o)*M-Math.sin(o)*L+(t.x+s.x)/2,y:Math.sin(o)*M+Math.cos(o)*L+(t.y+s.y)/2},A={x:(f.x-M)/n,y:(f.y-L)/e},d=x({x:1,y:0},A),P=x(A,{x:(-f.x-M)/n,y:(-f.y-L)/e});!r&&P>0?P-=2*Math.PI:r&&P<0&&(P+=2*Math.PI);var b=d+(P%=2*Math.PI)*a,T=n*Math.cos(b),m=e*Math.sin(b);return{x:Math.cos(o)*T-Math.sin(o)*m+w.x,y:Math.sin(o)*T+Math.cos(o)*m+w.y,ellipticalArcStartAngle:d,ellipticalArcEndAngle:d+P,ellipticalArcAngle:b,ellipticalArcCenter:w,resultantRx:n,resultantRy:e}},u=function(t,n){t=t||500;for(var e,i=0,h=[],r=[],s=n(0),a=0;a<t;a++){var o=y(a*(1/t),0,1);e=n(o),i+=f(s,e),r.push([s,e]),h.push({t:o,arcLength:i}),s=e}return e=n(1),r.push([s,e]),i+=f(s,e),h.push({t:1,arcLength:i}),{arcLength:i,arcLengthMap:h,approximationLines:r}},l=function(t,n){return(t%n+n)%n},c=function(t){return t*(Math.PI/180)},f=function(t,n){return Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2))},y=function(t,n,e){return Math.min(Math.max(t,n),e)},x=function(t,n){var e=t.x*n.x+t.y*n.y,i=Math.sqrt((Math.pow(t.x,2)+Math.pow(t.y,2))*(Math.pow(n.x,2)+Math.pow(n.y,2)));return(t.x*n.y-t.y*n.x<0?-1:1)*Math.acos(e/i)},p=[[],[],[-.5773502691896257,.5773502691896257],[0,-.7745966692414834,.7745966692414834],[-.33998104358485626,.33998104358485626,-.8611363115940526,.8611363115940526],[0,-.5384693101056831,.5384693101056831,-.906179845938664,.906179845938664],[.6612093864662645,-.6612093864662645,-.2386191860831969,.2386191860831969,-.932469514203152,.932469514203152],[0,.4058451513773972,-.4058451513773972,-.7415311855993945,.7415311855993945,-.9491079123427585,.9491079123427585],[-.1834346424956498,.1834346424956498,-.525532409916329,.525532409916329,-.7966664774136267,.7966664774136267,-.9602898564975363,.9602898564975363],[0,-.8360311073266358,.8360311073266358,-.9681602395076261,.9681602395076261,-.3242534234038089,.3242534234038089,-.6133714327005904,.6133714327005904],[-.14887433898163122,.14887433898163122,-.4333953941292472,.4333953941292472,-.6794095682990244,.6794095682990244,-.8650633666889845,.8650633666889845,-.9739065285171717,.9739065285171717],[0,-.26954315595234496,.26954315595234496,-.5190961292068118,.5190961292068118,-.7301520055740494,.7301520055740494,-.8870625997680953,.8870625997680953,-.978228658146057,.978228658146057],[-.1252334085114689,.1252334085114689,-.3678314989981802,.3678314989981802,-.5873179542866175,.5873179542866175,-.7699026741943047,.7699026741943047,-.9041172563704749,.9041172563704749,-.9815606342467192,.9815606342467192],[0,-.2304583159551348,.2304583159551348,-.44849275103644687,.44849275103644687,-.6423493394403402,.6423493394403402,-.8015780907333099,.8015780907333099,-.9175983992229779,.9175983992229779,-.9841830547185881,.9841830547185881],[-.10805494870734367,.10805494870734367,-.31911236892788974,.31911236892788974,-.5152486363581541,.5152486363581541,-.6872929048116855,.6872929048116855,-.827201315069765,.827201315069765,-.9284348836635735,.9284348836635735,-.9862838086968123,.9862838086968123],[0,-.20119409399743451,.20119409399743451,-.3941513470775634,.3941513470775634,-.5709721726085388,.5709721726085388,-.7244177313601701,.7244177313601701,-.8482065834104272,.8482065834104272,-.937273392400706,.937273392400706,-.9879925180204854,.9879925180204854],[-.09501250983763744,.09501250983763744,-.2816035507792589,.2816035507792589,-.45801677765722737,.45801677765722737,-.6178762444026438,.6178762444026438,-.755404408355003,.755404408355003,-.8656312023878318,.8656312023878318,-.9445750230732326,.9445750230732326,-.9894009349916499,.9894009349916499],[0,-.17848418149584785,.17848418149584785,-.3512317634538763,.3512317634538763,-.5126905370864769,.5126905370864769,-.6576711592166907,.6576711592166907,-.7815140038968014,.7815140038968014,-.8802391537269859,.8802391537269859,-.9506755217687678,.9506755217687678,-.9905754753144174,.9905754753144174],[-.0847750130417353,.0847750130417353,-.2518862256915055,.2518862256915055,-.41175116146284263,.41175116146284263,-.5597708310739475,.5597708310739475,-.6916870430603532,.6916870430603532,-.8037049589725231,.8037049589725231,-.8926024664975557,.8926024664975557,-.9558239495713977,.9558239495713977,-.9915651684209309,.9915651684209309],[0,-.16035864564022537,.16035864564022537,-.31656409996362983,.31656409996362983,-.46457074137596094,.46457074137596094,-.600545304661681,.600545304661681,-.7209661773352294,.7209661773352294,-.8227146565371428,.8227146565371428,-.9031559036148179,.9031559036148179,-.96020815213483,.96020815213483,-.9924068438435844,.9924068438435844],[-.07652652113349734,.07652652113349734,-.22778585114164507,.22778585114164507,-.37370608871541955,.37370608871541955,-.5108670019508271,.5108670019508271,-.636053680726515,.636053680726515,-.7463319064601508,.7463319064601508,-.8391169718222188,.8391169718222188,-.912234428251326,.912234428251326,-.9639719272779138,.9639719272779138,-.9931285991850949,.9931285991850949],[0,-.1455618541608951,.1455618541608951,-.2880213168024011,.2880213168024011,-.4243421202074388,.4243421202074388,-.5516188358872198,.5516188358872198,-.6671388041974123,.6671388041974123,-.7684399634756779,.7684399634756779,-.8533633645833173,.8533633645833173,-.9200993341504008,.9200993341504008,-.9672268385663063,.9672268385663063,-.9937521706203895,.9937521706203895],[-.06973927331972223,.06973927331972223,-.20786042668822127,.20786042668822127,-.34193582089208424,.34193582089208424,-.469355837986757,.469355837986757,-.5876404035069116,.5876404035069116,-.6944872631866827,.6944872631866827,-.7878168059792081,.7878168059792081,-.8658125777203002,.8658125777203002,-.926956772187174,.926956772187174,-.9700604978354287,.9700604978354287,-.9942945854823992,.9942945854823992],[0,-.1332568242984661,.1332568242984661,-.26413568097034495,.26413568097034495,-.3903010380302908,.3903010380302908,-.5095014778460075,.5095014778460075,-.6196098757636461,.6196098757636461,-.7186613631319502,.7186613631319502,-.8048884016188399,.8048884016188399,-.8767523582704416,.8767523582704416,-.9329710868260161,.9329710868260161,-.9725424712181152,.9725424712181152,-.9947693349975522,.9947693349975522],[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213]],v=[[],[],[1,1],[.8888888888888888,.5555555555555556,.5555555555555556],[.6521451548625461,.6521451548625461,.34785484513745385,.34785484513745385],[.5688888888888889,.47862867049936647,.47862867049936647,.23692688505618908,.23692688505618908],[.3607615730481386,.3607615730481386,.46791393457269104,.46791393457269104,.17132449237917036,.17132449237917036],[.4179591836734694,.3818300505051189,.3818300505051189,.27970539148927664,.27970539148927664,.1294849661688697,.1294849661688697],[.362683783378362,.362683783378362,.31370664587788727,.31370664587788727,.22238103445337448,.22238103445337448,.10122853629037626,.10122853629037626],[.3302393550012598,.1806481606948574,.1806481606948574,.08127438836157441,.08127438836157441,.31234707704000286,.31234707704000286,.26061069640293544,.26061069640293544],[.29552422471475287,.29552422471475287,.26926671930999635,.26926671930999635,.21908636251598204,.21908636251598204,.1494513491505806,.1494513491505806,.06667134430868814,.06667134430868814],[.2729250867779006,.26280454451024665,.26280454451024665,.23319376459199048,.23319376459199048,.18629021092773426,.18629021092773426,.1255803694649046,.1255803694649046,.05566856711617366,.05566856711617366],[.24914704581340277,.24914704581340277,.2334925365383548,.2334925365383548,.20316742672306592,.20316742672306592,.16007832854334622,.16007832854334622,.10693932599531843,.10693932599531843,.04717533638651183,.04717533638651183],[.2325515532308739,.22628318026289723,.22628318026289723,.2078160475368885,.2078160475368885,.17814598076194574,.17814598076194574,.13887351021978725,.13887351021978725,.09212149983772845,.09212149983772845,.04048400476531588,.04048400476531588],[.2152638534631578,.2152638534631578,.2051984637212956,.2051984637212956,.18553839747793782,.18553839747793782,.15720316715819355,.15720316715819355,.12151857068790319,.12151857068790319,.08015808715976021,.08015808715976021,.03511946033175186,.03511946033175186],[.2025782419255613,.19843148532711158,.19843148532711158,.1861610000155622,.1861610000155622,.16626920581699392,.16626920581699392,.13957067792615432,.13957067792615432,.10715922046717194,.10715922046717194,.07036604748810812,.07036604748810812,.03075324199611727,.03075324199611727],[.1894506104550685,.1894506104550685,.18260341504492358,.18260341504492358,.16915651939500254,.16915651939500254,.14959598881657674,.14959598881657674,.12462897125553388,.12462897125553388,.09515851168249279,.09515851168249279,.062253523938647894,.062253523938647894,.027152459411754096,.027152459411754096],[.17944647035620653,.17656270536699264,.17656270536699264,.16800410215645004,.16800410215645004,.15404576107681028,.15404576107681028,.13513636846852548,.13513636846852548,.11188384719340397,.11188384719340397,.08503614831717918,.08503614831717918,.0554595293739872,.0554595293739872,.02414830286854793,.02414830286854793],[.1691423829631436,.1691423829631436,.16427648374583273,.16427648374583273,.15468467512626524,.15468467512626524,.14064291467065065,.14064291467065065,.12255520671147846,.12255520671147846,.10094204410628717,.10094204410628717,.07642573025488905,.07642573025488905,.0497145488949698,.0497145488949698,.02161601352648331,.02161601352648331],[.1610544498487837,.15896884339395434,.15896884339395434,.15276604206585967,.15276604206585967,.1426067021736066,.1426067021736066,.12875396253933621,.12875396253933621,.11156664554733399,.11156664554733399,.09149002162245,.09149002162245,.06904454273764123,.06904454273764123,.0448142267656996,.0448142267656996,.019461788229726478,.019461788229726478],[.15275338713072584,.15275338713072584,.14917298647260374,.14917298647260374,.14209610931838204,.14209610931838204,.13168863844917664,.13168863844917664,.11819453196151841,.11819453196151841,.10193011981724044,.10193011981724044,.08327674157670475,.08327674157670475,.06267204833410907,.06267204833410907,.04060142980038694,.04060142980038694,.017614007139152118,.017614007139152118],[.14608113364969041,.14452440398997005,.14452440398997005,.13988739479107315,.13988739479107315,.13226893863333747,.13226893863333747,.12183141605372853,.12183141605372853,.10879729916714838,.10879729916714838,.09344442345603386,.09344442345603386,.0761001136283793,.0761001136283793,.057134425426857205,.057134425426857205,.036953789770852494,.036953789770852494,.016017228257774335,.016017228257774335],[.13925187285563198,.13925187285563198,.13654149834601517,.13654149834601517,.13117350478706238,.13117350478706238,.12325237681051242,.12325237681051242,.11293229608053922,.11293229608053922,.10041414444288096,.10041414444288096,.08594160621706773,.08594160621706773,.06979646842452049,.06979646842452049,.052293335152683286,.052293335152683286,.03377490158481415,.03377490158481415,.0146279952982722,.0146279952982722],[.13365457218610619,.1324620394046966,.1324620394046966,.12890572218808216,.12890572218808216,.12304908430672953,.12304908430672953,.11499664022241136,.11499664022241136,.10489209146454141,.10489209146454141,.09291576606003515,.09291576606003515,.07928141177671895,.07928141177671895,.06423242140852585,.06423242140852585,.04803767173108467,.04803767173108467,.030988005856979445,.030988005856979445,.013411859487141771,.013411859487141771],[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872]],M=[[1],[1,1],[1,2,1],[1,3,3,1]],L=function(t,n,e){return{x:(1-e)*(1-e)*(1-e)*t[0]+3*(1-e)*(1-e)*e*t[1]+3*(1-e)*e*e*t[2]+e*e*e*t[3],y:(1-e)*(1-e)*(1-e)*n[0]+3*(1-e)*(1-e)*e*n[1]+3*(1-e)*e*e*n[2]+e*e*e*n[3]}},w=function(t,n,e){return d([3*(t[1]-t[0]),3*(t[2]-t[1]),3*(t[3]-t[2])],[3*(n[1]-n[0]),3*(n[2]-n[1]),3*(n[3]-n[2])],e)},A=function(t,n,e){var i,h,r;i=e/2,h=0;for(var s=0;s<20;s++)r=i*p[20][s]+i,h+=v[20][s]*T(t,n,r);return i*h},d=function(t,n,e){return{x:(1-e)*(1-e)*t[0]+2*(1-e)*e*t[1]+e*e*t[2],y:(1-e)*(1-e)*n[0]+2*(1-e)*e*n[1]+e*e*n[2]}},P=function(t,n,e){void 0===e&&(e=1);var i=t[0]-2*t[1]+t[2],h=n[0]-2*n[1]+n[2],r=2*t[1]-2*t[0],s=2*n[1]-2*n[0],a=4*(i*i+h*h),o=4*(i*r+h*s),g=r*r+s*s;if(0===a)return e*Math.sqrt(Math.pow(t[2]-t[0],2)+Math.pow(n[2]-n[0],2));var u=o/(2*a),l=e+u,c=g/a-u*u,f=l*l+c>0?Math.sqrt(l*l+c):0,y=u*u+c>0?Math.sqrt(u*u+c):0,x=u+Math.sqrt(u*u+c)!==0?c*Math.log(Math.abs((l+f)/(u+y))):0;return Math.sqrt(a)/2*(l*f-u*y+x)},b=function(t,n,e){return{x:2*(1-e)*(t[1]-t[0])+2*e*(t[2]-t[1]),y:2*(1-e)*(n[1]-n[0])+2*e*(n[2]-n[1])}};function T(t,n,e){var i=m(1,e,t),h=m(1,e,n),r=i*i+h*h;return Math.sqrt(r)}var m=function t(n,e,i){var h,r,s=i.length-1;if(0===s)return 0;if(0===n){r=0;for(var a=0;a<=s;a++)r+=M[s][a]*Math.pow(1-e,s-a)*Math.pow(e,a)*i[a];return r}h=new Array(s);for(var o=0;o<s;o++)h[o]=s*(i[o+1]-i[o]);return t(n-1,e,h)},q=function(t,n,e){for(var i=1,h=t/n,r=(t-e(h))/n,s=0;i>.001;){var a=e(h+r),o=Math.abs(t-a)/n;if(o<i)i=o,h+=r;else{var g=e(h-r),u=Math.abs(t-g)/n;u<i?(i=u,h-=r):r/=2}if(++s>500)break}return h},_=function(n,e,i,h,r,s,a,o){var g=this;t(this,\"a\",void 0),t(this,\"b\",void 0),t(this,\"c\",void 0),t(this,\"d\",void 0),t(this,\"length\",void 0),t(this,\"getArcLength\",void 0),t(this,\"getPoint\",void 0),t(this,\"getDerivative\",void 0),t(this,\"getTotalLength\",(function(){return g.length})),t(this,\"getPointAtLength\",(function(t){var n=[g.a.x,g.b.x,g.c.x,g.d.x],e=[g.a.y,g.b.y,g.c.y,g.d.y],i=q(t,g.length,(function(t){return g.getArcLength(n,e,t)}));return g.getPoint(n,e,i)})),t(this,\"getTangentAtLength\",(function(t){var n=[g.a.x,g.b.x,g.c.x,g.d.x],e=[g.a.y,g.b.y,g.c.y,g.d.y],i=q(t,g.length,(function(t){return g.getArcLength(n,e,t)})),h=g.getDerivative(n,e,i),r=Math.sqrt(h.x*h.x+h.y*h.y);return r>0?{x:h.x/r,y:h.y/r}:{x:0,y:0}})),t(this,\"getPropertiesAtLength\",(function(t){var n,e=[g.a.x,g.b.x,g.c.x,g.d.x],i=[g.a.y,g.b.y,g.c.y,g.d.y],h=q(t,g.length,(function(t){return g.getArcLength(e,i,t)})),r=g.getDerivative(e,i,h),s=Math.sqrt(r.x*r.x+r.y*r.y);n=s>0?{x:r.x/s,y:r.y/s}:{x:0,y:0};var a=g.getPoint(e,i,h);return{x:a.x,y:a.y,tangentX:n.x,tangentY:n.y}})),t(this,\"getC\",(function(){return g.c})),t(this,\"getD\",(function(){return g.d})),this.a={x:n,y:e},this.b={x:i,y:h},this.c={x:r,y:s},void 0!==a&&void 0!==o?(this.getArcLength=A,this.getPoint=L,this.getDerivative=w,this.d={x:a,y:o}):(this.getArcLength=P,this.getPoint=d,this.getDerivative=b,this.d={x:0,y:0}),this.length=this.getArcLength([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],1)},S=function(e){var r=this;t(this,\"length\",0),t(this,\"partial_lengths\",[]),t(this,\"functions\",[]),t(this,\"initial_point\",null),t(this,\"getPartAtLength\",(function(t){t<0?t=0:t>r.length&&(t=r.length);for(var n=r.partial_lengths.length-1;r.partial_lengths[n]>=t&&n>0;)n--;return n++,{fraction:t-r.partial_lengths[n-1],i:n}})),t(this,\"getTotalLength\",(function(){return r.length})),t(this,\"getPointAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getPointAtLength(n.fraction);if(r.initial_point)return r.initial_point;throw new Error(\"Wrong function at this part.\")})),t(this,\"getTangentAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getTangentAtLength(n.fraction);if(r.initial_point)return{x:0,y:0};throw new Error(\"Wrong function at this part.\")})),t(this,\"getPropertiesAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getPropertiesAtLength(n.fraction);if(r.initial_point)return{x:r.initial_point.x,y:r.initial_point.y,tangentX:0,tangentY:0};throw new Error(\"Wrong function at this part.\")})),t(this,\"getParts\",(function(){for(var t=[],n=0;n<r.functions.length;n++)if(null!==r.functions[n]){r.functions[n]=r.functions[n];var e={start:r.functions[n].getPointAtLength(0),end:r.functions[n].getPointAtLength(r.partial_lengths[n]-r.partial_lengths[n-1]),length:r.partial_lengths[n]-r.partial_lengths[n-1],getPointAtLength:r.functions[n].getPointAtLength,getTangentAtLength:r.functions[n].getTangentAtLength,getPropertiesAtLength:r.functions[n].getPropertiesAtLength};t.push(e)}return t}));for(var g,u=Array.isArray(e)?e:function(t){var e=(t&&t.length>0?t:\"M0,0\").match(h);if(!e)throw new Error(\"No path elements found in string \".concat(t));return e.reduce((function(t,e){var h=e.charAt(0),r=h.toLowerCase(),a=s(e.substr(1));for(\"m\"===r&&a.length>2&&(t.push([h].concat(n(a.splice(0,2)))),r=\"l\",h=\"m\"===h?\"l\":\"L\");a.length>=0;){if(a.length===i[r]){t.push([h].concat(n(a.splice(0,i[r]))));break}if(a.length<i[r])throw new Error('Malformed path data: \"'.concat(h,'\" must have ').concat(i[r],\" elements and has \").concat(a.length,\": \").concat(e));t.push([h].concat(n(a.splice(0,i[r]))))}return t}),[])}(e),l=[0,0],c=[0,0],f=[0,0],y=0;y<u.length;y++){if(\"M\"===u[y][0])f=[(l=[u[y][1],u[y][2]])[0],l[1]],this.functions.push(null),0===y&&(this.initial_point={x:u[y][1],y:u[y][2]});else if(\"m\"===u[y][0])f=[(l=[u[y][1]+l[0],u[y][2]+l[1]])[0],l[1]],this.functions.push(null);else if(\"L\"===u[y][0])this.length+=Math.sqrt(Math.pow(l[0]-u[y][1],2)+Math.pow(l[1]-u[y][2],2)),this.functions.push(new a(l[0],u[y][1],l[1],u[y][2])),l=[u[y][1],u[y][2]];else if(\"l\"===u[y][0])this.length+=Math.sqrt(Math.pow(u[y][1],2)+Math.pow(u[y][2],2)),this.functions.push(new a(l[0],u[y][1]+l[0],l[1],u[y][2]+l[1])),l=[u[y][1]+l[0],u[y][2]+l[1]];else if(\"H\"===u[y][0])this.length+=Math.abs(l[0]-u[y][1]),this.functions.push(new a(l[0],u[y][1],l[1],l[1])),l[0]=u[y][1];else if(\"h\"===u[y][0])this.length+=Math.abs(u[y][1]),this.functions.push(new a(l[0],l[0]+u[y][1],l[1],l[1])),l[0]=u[y][1]+l[0];else if(\"V\"===u[y][0])this.length+=Math.abs(l[1]-u[y][1]),this.functions.push(new a(l[0],l[0],l[1],u[y][1])),l[1]=u[y][1];else if(\"v\"===u[y][0])this.length+=Math.abs(u[y][1]),this.functions.push(new a(l[0],l[0],l[1],l[1]+u[y][1])),l[1]=u[y][1]+l[1];else if(\"z\"===u[y][0]||\"Z\"===u[y][0])this.length+=Math.sqrt(Math.pow(f[0]-l[0],2)+Math.pow(f[1]-l[1],2)),this.functions.push(new a(l[0],f[0],l[1],f[1])),l=[f[0],f[1]];else if(\"C\"===u[y][0])g=new _(l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4],u[y][5],u[y][6]),this.length+=g.getTotalLength(),l=[u[y][5],u[y][6]],this.functions.push(g);else if(\"c\"===u[y][0])(g=new _(l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4],l[0]+u[y][5],l[1]+u[y][6])).getTotalLength()>0?(this.length+=g.getTotalLength(),this.functions.push(g),l=[u[y][5]+l[0],u[y][6]+l[1]]):this.functions.push(new a(l[0],l[0],l[1],l[1]));else if(\"S\"===u[y][0]){if(y>0&&[\"C\",\"c\",\"S\",\"s\"].indexOf(u[y-1][0])>-1){if(g){var x=g.getC();g=new _(l[0],l[1],2*l[0]-x.x,2*l[1]-x.y,u[y][1],u[y][2],u[y][3],u[y][4])}}else g=new _(l[0],l[1],l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4]);g&&(this.length+=g.getTotalLength(),l=[u[y][3],u[y][4]],this.functions.push(g))}else if(\"s\"===u[y][0]){if(y>0&&[\"C\",\"c\",\"S\",\"s\"].indexOf(u[y-1][0])>-1){if(g){var p=g.getC(),v=g.getD();g=new _(l[0],l[1],l[0]+v.x-p.x,l[1]+v.y-p.y,l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4])}}else g=new _(l[0],l[1],l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4]);g&&(this.length+=g.getTotalLength(),l=[u[y][3]+l[0],u[y][4]+l[1]],this.functions.push(g))}else if(\"Q\"===u[y][0]){if(l[0]==u[y][1]&&l[1]==u[y][2]){var M=new a(u[y][1],u[y][3],u[y][2],u[y][4]);this.length+=M.getTotalLength(),this.functions.push(M)}else g=new _(l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);l=[u[y][3],u[y][4]],c=[u[y][1],u[y][2]]}else if(\"q\"===u[y][0]){if(0!=u[y][1]||0!=u[y][2])g=new _(l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);else{var L=new a(l[0]+u[y][1],l[0]+u[y][3],l[1]+u[y][2],l[1]+u[y][4]);this.length+=L.getTotalLength(),this.functions.push(L)}c=[l[0]+u[y][1],l[1]+u[y][2]],l=[u[y][3]+l[0],u[y][4]+l[1]]}else if(\"T\"===u[y][0]){if(y>0&&[\"Q\",\"q\",\"T\",\"t\"].indexOf(u[y-1][0])>-1)g=new _(l[0],l[1],2*l[0]-c[0],2*l[1]-c[1],u[y][1],u[y][2],void 0,void 0),this.functions.push(g),this.length+=g.getTotalLength();else{var w=new a(l[0],u[y][1],l[1],u[y][2]);this.functions.push(w),this.length+=w.getTotalLength()}c=[2*l[0]-c[0],2*l[1]-c[1]],l=[u[y][1],u[y][2]]}else if(\"t\"===u[y][0]){if(y>0&&[\"Q\",\"q\",\"T\",\"t\"].indexOf(u[y-1][0])>-1)g=new _(l[0],l[1],2*l[0]-c[0],2*l[1]-c[1],l[0]+u[y][1],l[1]+u[y][2],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);else{var A=new a(l[0],l[0]+u[y][1],l[1],l[1]+u[y][2]);this.length+=A.getTotalLength(),this.functions.push(A)}c=[2*l[0]-c[0],2*l[1]-c[1]],l=[u[y][1]+l[0],u[y][2]+l[1]]}else if(\"A\"===u[y][0]){var d=new o(l[0],l[1],u[y][1],u[y][2],u[y][3],1===u[y][4],1===u[y][5],u[y][6],u[y][7]);this.length+=d.getTotalLength(),l=[u[y][6],u[y][7]],this.functions.push(d)}else if(\"a\"===u[y][0]){var P=new o(l[0],l[1],u[y][1],u[y][2],u[y][3],1===u[y][4],1===u[y][5],l[0]+u[y][6],l[1]+u[y][7]);this.length+=P.getTotalLength(),l=[l[0]+u[y][6],l[1]+u[y][7]],this.functions.push(P)}this.partial_lengths.push(this.length)}},C=function(n){var e=this;if(t(this,\"inst\",void 0),t(this,\"getTotalLength\",(function(){return e.inst.getTotalLength()})),t(this,\"getPointAtLength\",(function(t){return e.inst.getPointAtLength(t)})),t(this,\"getTangentAtLength\",(function(t){return e.inst.getTangentAtLength(t)})),t(this,\"getPropertiesAtLength\",(function(t){return e.inst.getPropertiesAtLength(t)})),t(this,\"getParts\",(function(){return e.inst.getParts()})),this.inst=new S(n),!(this instanceof C))return new C(n)};export{C as svgPathProperties};\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n"],"names":["$jwO5r","parcelRequire","$b64uw","$96f892b1197b36bc$export$2e2bcd8739ae039","a","b","i","n","Math","min","length","c","slice","t","$96f892b1197b36bc$export$5cd576d1827d40c8","x","ArrayBuffer","isView","DataView","$ffdd2a4ba6ed6846$export$15d09067c6a5ee49","nb","na","Array","$245d0299d8ca546d$export$2e2bcd8739ae039","$f98b7229cf152fee$export$2e2bcd8739ae039","d","Date","setTime","$cecbd295448bf552$export$2e2bcd8739ae039","k","$eYuTS","default","$dxJZk","$diuMl","$hG78e","isArray","valueOf","toString","isNaN","$e66c1d2470470c6c$export$3dc07afe418952bc","_oldestIndex","_newestIndex","_storage","size","this","enqueue","datum","dequeue","deletedData","oldestIndex","$a112e980dd298f04$var$t","e","Object","defineProperty","value","enumerable","configurable","writable","$a112e980dd298f04$var$n","$a112e980dd298f04$var$e","Symbol","iterator","from","prototype","call","constructor","name","test","TypeError","$a112e980dd298f04$var$i","h","l","m","q","s","v","z","$a112e980dd298f04$var$h","$a112e980dd298f04$var$r","$a112e980dd298f04$var$a","r","sqrt","pow","x0","x1","y0","y1","Number","y","getPointAtLength","getTangentAtLength","tangentX","tangentY","$a112e980dd298f04$var$o","o","$a112e980dd298f04$var$g","rx","ry","xAxisRotate","LargeArcFlag","SweepFlag","f","$a112e980dd298f04$var$u","arcLength","abs","$a112e980dd298f04$var$l","$a112e980dd298f04$var$c","ellipticalArcAngle","g","u","cos","sin","p","M","L","w","A","$a112e980dd298f04$var$x","P","PI","T","ellipticalArcStartAngle","ellipticalArcEndAngle","ellipticalArcCenter","resultantRx","resultantRy","$a112e980dd298f04$var$y","$a112e980dd298f04$var$f","push","arcLengthMap","approximationLines","max","acos","$a112e980dd298f04$var$p","$a112e980dd298f04$var$v","$a112e980dd298f04$var$M","$a112e980dd298f04$var$L","$a112e980dd298f04$var$w","$a112e980dd298f04$var$d","$a112e980dd298f04$var$A","$a112e980dd298f04$var$T","$a112e980dd298f04$var$P","log","$a112e980dd298f04$var$b","$a112e980dd298f04$var$m","$a112e980dd298f04$var$q","$a112e980dd298f04$var$_","getArcLength","getPoint","getDerivative","$a112e980dd298f04$var$S","partial_lengths","fraction","getPartAtLength","functions","initial_point","Error","getPropertiesAtLength","start","end","match","concat","reduce","charAt","toLowerCase","map","$a112e980dd298f04$var$s","substr","splice","getTotalLength","indexOf","getC","getD","$a112e980dd298f04$export$56776403033771b1","inst","getParts","$4c90258534db95a8$var$earcut","data","holeIndices","dim","minX","minY","maxX","maxY","invSize","hasHoles","outerLen","outerNode","$4c90258534db95a8$var$linkedList","triangles","next","prev","len","list","queue","steiner","$4c90258534db95a8$var$getLeftmost","sort","$4c90258534db95a8$var$compareX","$4c90258534db95a8$var$eliminateHole","$4c90258534db95a8$var$eliminateHoles","$4c90258534db95a8$var$earcutLinked","clockwise","last","$4c90258534db95a8$var$signedArea","$4c90258534db95a8$var$insertNode","$4c90258534db95a8$var$equals","$4c90258534db95a8$var$removeNode","$4c90258534db95a8$var$filterPoints","again","$4c90258534db95a8$var$area","ear","pass","$4c90258534db95a8$var$zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","$4c90258534db95a8$var$sortLinked","$4c90258534db95a8$var$indexCurve","stop","$4c90258534db95a8$var$isEarHashed","$4c90258534db95a8$var$isEar","$4c90258534db95a8$var$cureLocalIntersections","$4c90258534db95a8$var$splitEarcut","ax","bx","cx","ay","by","cy","$4c90258534db95a8$var$pointInTriangle","minZ","maxZ","$4c90258534db95a8$var$intersects","$4c90258534db95a8$var$locallyInside","$4c90258534db95a8$var$isValidDiagonal","$4c90258534db95a8$var$splitPolygon","hole","bridge","hx","hy","qx","Infinity","tan","mx","my","tanMin","$4c90258534db95a8$var$sectorContainsSector","$4c90258534db95a8$var$findHoleBridge","bridgeReverse","leftmost","px","py","$4c90258534db95a8$var$intersectsPolygon","inside","$4c90258534db95a8$var$middleInside","p1","p2","q1","q2","o1","$4c90258534db95a8$var$sign","o2","o3","o4","$4c90258534db95a8$var$onSegment","num","a2","$4c90258534db95a8$var$Node","b2","an","bp","sum","j","$4c90258534db95a8$exports","deviation","polygonArea","trianglesArea","flatten","result","vertices","holes","dimensions","holeIndex","$4ac34dd61ff1357d$var$DOMImplementation","$parcel$interopDefault","DOMImplementation","self","$4ac34dd61ff1357d$var$brw","background","$gVAGA","ctx","canvasHeight","canvasWidth","dom","createDocument","ratio","generator","$35YzH","ringSet","ringHeights","sliceSet","sliceAngles","sliceColors","path","innerRadius","outerRadius","startAngle","endAngle","poly","setContext","setDimensions","draw","save","clearRect","floor","lineWidth","setTransform","selectAll","each","select","id","attr","fill","svgPath","strokeStyle","fillStyle","globalAlpha","includes","stroke","Path2D","restore","generateArcs","acc","sections","ring","slicePallet","arc","border","initChart","initialSections","flatMap","type","input","interpolator","updateSliceAngles","updateSliceSet","oldSliceSet","fromEntries","startSlices","getPathPoints","endSlices","removeSlices","outGointSliceAngles","leavingArcs","updateRingSet","oldRingSet","startingHeights","forEach","intermediateRingSet","arcsWIthRing","removeRings","sectionCoords","sectionVerts","num_points","points","pathProperties","pathLength","index","coords","randomClampedR","random","randomClampedTheta","postMessage","addEventListener","msg","canvas","getContext"],"version":3,"file":"backgroundWorker.3c9bf3dc.js.map"}