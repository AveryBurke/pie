{"mappings":"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BAAoB,CAAC,kBAAkB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,oBAAoB,CAAC,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,oBAAoB,oBAAoB,oBAAoB,qBAAqB,CAAC,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,oBAAoB,CAAC,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,oBAAoB,CAAC,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,gBAAgB,gBAAgB,mBAAmB,mBAAmB,kBAAkB,kBAAkB,oBAAoB,qBAAqB,CAAC,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,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","sources":["src/workers/backgroundWorker.ts","src/static/queue.ts","src/d3/renderBackground.ts","node_modules/svg-path-properties/dist/svg-path-properties.esm.js","node_modules/earcut/src/earcut.js","src/static/partitionNumber.ts","src/static/indexedSet.ts"],"sourcesContent":["import { select } from \"d3-selection\";\nimport { interpolate } from \"d3-interpolate\";\nimport { arc } from \"d3-shape\";\nimport { Queue } from '../static/queue'\nimport renderBackground from \"../d3/renderBackground\"\nimport { svgPathProperties } from \"svg-path-properties\"\nimport earcut from \"earcut\";\nimport partitionNumber from \"../static/partitionNumber\";\nimport IndexedSet from \"../static/indexedSet\";\n// @ts-ignore\nimport xmldom from \"../domparser_bundle\";\n\nconst DOMImplementation = xmldom.DOMImplementation;\n\nconst backgroundWorker: Worker = self as any\n\nclass worker {\n    background: ReturnType<typeof renderBackground> = renderBackground()\n    ctx: OffscreenCanvasRenderingContext2D | null = null\n    canvasHeight = 0\n    canvasWidth = 0\n    dom: Document = new DOMImplementation().createDocument()\n    ratio = 2\n    generator = arc()\n    ringSet: string[] = []\n    ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } } = {}\n    sliceSet: string[] = []\n    sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } } = {}\n    sliceColors: { [slice: string]: string[] } = {}\n    path = arc()({ innerRadius: 50, outerRadius: 300, startAngle: 0, endAngle: 97 * Math.PI / 180 })\n    poly = [10, 0, 0, 50, 60, 60, 70, 10]\n    arcCount: { [arc_id:string] : number } = {}\n    /** assigne an int to each id, for conding ids a texture */\n    idSet = new IndexedSet()\n    setContext(ctx: OffscreenCanvasRenderingContext2D) {\n        this.ctx = ctx\n    }\n\n    setDimensions(w: number, h: number, r: number) {\n        this.canvasWidth = w\n        this.canvasHeight = h\n        this.ratio = r\n    }\n\n    updateArcCount(arcCount: { [arc_id:string]: number }){\n        this.arcCount = arcCount;\n    }\n\n    draw() {\n        const { ctx, canvasWidth, canvasHeight, ratio } = this\n        if (ctx) {\n            ctx.save();\n            ctx.clearRect(0, 0, Math.floor(canvasWidth * ratio), Math.floor(canvasHeight * ratio));\n            ctx.lineWidth = .75;\n            ctx.setTransform(ratio, 0, 0, ratio, Math.floor(canvasWidth * ratio) / 2, Math.floor(canvasHeight * ratio) / 2)\n            select(this.dom).selectAll(\"custom.section\").each(function (d: any, i) {\n                const path = select(this).select('path'),\n                    id = select(this).attr('id'),\n                    fill = path.attr('fill'),\n                    opacity = +path.attr('opacity'),\n                    svgPath = path.attr('d')\n                ctx.strokeStyle = '#000000'\n                ctx.fillStyle = fill\n                ctx.globalAlpha = .9 //<-- make the background a little opaqu so the shapes stand out\n                if (svgPath && ctx && !id.includes('_border')) {\n                    ctx.stroke(new Path2D(svgPath))\n                    ctx.fill(new Path2D(svgPath))\n                }\n            })\n            ctx.globalAlpha = 1\n\n            ctx.restore()\n        }\n    }\n\n\n\n    /** \"add\" and \"remove\" are only for the id set. there is no penalty for duplicate adds*/\n    generateArcs(state:\"add\" | \"remove\" = \"add\") {\n        const { ringSet, ringHeights, sliceSet, sliceColors, sliceAngles, arcCount } = this\n        return sliceSet.reduce<Section[]>((acc, slice) => {\n            if (sliceAngles[slice]) {\n                const { startAngle, endAngle } = sliceAngles[slice]!\n                const sections = ringSet.reduce<Section[]>((acc, ring, j) => {\n                    if (ringHeights[ring]) {\n                        const { innerRadius, outerRadius } = ringHeights[ring]!\n                        const id = `_${slice}_${ring}`\n                        const subsections:Subsection[] = []\n                        if (arcCount[id] > 300 && state === 'add'){ \n                            const partitions = partitionNumber(arcCount[id], Math.ceil(arcCount[id] / 300))\n                            if (partitions){\n                                for (let i = 0; i < partitions.length; i++) {\n                                    const subarcId = id + `_subarc_${i}`\n                                    arcCount[subarcId] = partitions[i];\n                                    this.idSet.insert(subarcId)\n                                    const theta = endAngle - startAngle\n                                    const sa = startAngle + (i * (theta/partitions.length))\n                                    const ea = startAngle + ((i + 1) * (theta/partitions.length))\n                                    subsections.push({startAngle:sa,endAngle:ea,innerRadius,outerRadius,id:subarcId})\n                                }\n                            }\n                        } else  if (state === 'add') {\n                            this.idSet.insert(id)\n                            subsections.push({id,innerRadius,outerRadius,endAngle,startAngle})\n                        }\n                        if (state === 'remove') {\n                            this.idSet.remove(id)\n                            if (arcCount[id] > 300){\n                                for (let i = 0; i < Math.ceil(arcCount[id] / 300); i++) {\n                                    const subid = id + `_subarc_${i}`\n                                    this.idSet.remove(subid)\n                                }\n                            }\n                        }\n                        const slicePallet = sliceColors[slice]!\n                        const fill = slicePallet[j % slicePallet.length]!\n                        const arc = { id, innerRadius, outerRadius, startAngle, endAngle, fill, subsections }\n                        acc = [...acc, arc]\n                    }\n                    return acc\n                }, [])\n                acc = [...acc, ...sections]\n            }\n            return acc\n        }, [])\n\n    }\n\n    initChart(ringSet: string[], ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } }, sliceSet: string[], sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }, sliceColors: { [slice: string]: string[] }) {\n        const queue = new Queue<QueueTask>()\n        this.sliceColors = sliceColors\n        this.ringSet = ringSet\n        this.ringHeights = ringHeights\n        this.sliceSet = sliceSet\n        this.sliceAngles = sliceAngles\n        const initialSections: Section[] = sliceSet.flatMap((slice, i) => {\n            const { startAngle, endAngle } = sliceAngles[slice]!\n            return ringSet.map((ring, j) => {\n                const { innerRadius, outerRadius } = ringHeights[ring]!\n                const id = `_${slice}_${ring}_init`\n                this.idSet.insert(id)\n                const slicePallet = sliceColors[slice]!\n                const fill = slicePallet[j % slicePallet.length]!\n                return { id, innerRadius, outerRadius, startAngle, endAngle, fill, subsections:[]}\n            })\n        })\n\n        queue.enqueue({ type: \"sections\", input: initialSections })\n\n        select(this.dom)\n            .call(\n                this.background\n                    .queue(queue)\n                    .generator(arc())\n                    .interpolator(interpolate)\n                    .draw(() => this.draw())\n            )\n    }\n\n    updateSliceAngles(sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }) {\n        this.sliceAngles = sliceAngles \n    }\n\n    updateRingHeights(ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } }) {\n        this.ringHeights = ringHeights\n    }\n\n    updateSliceSet(sliceSet: string[], sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }, sliceColors: { [key: string]: string[] }) {\n        const { sliceSet: oldSliceSet } = this\n        this.sliceSet = sliceSet\n        this.sliceColors = sliceColors\n        if (oldSliceSet.length === 0) {\n            this.sliceAngles = Object.fromEntries(sliceSet.map(slice => [slice, { startAngle: 0, endAngle: 0 }]))\n            const startSlices: QueueTask = { type: \"sections\", input: this.generateArcs() }\n            this.background.enqueue(startSlices)\n        }\n        this.sliceAngles = sliceAngles\n        // this.getPathPoints()\n        const endSlices: QueueTask = { type: \"sections\", input: this.generateArcs() }\n        this.background.enqueue(endSlices)\n        this.background.dequeue()\n        // this.getPathPoints()\n    }\n\n    removeSlices() {\n        //enqueue the transition, but don't dequeue it\n        const { sliceSet } = this\n        const outGointSliceAngles = Object.fromEntries(sliceSet.map(slice => [slice, { startAngle: 2 * Math.PI, endAngle: 2 * Math.PI }]))\n        this.sliceAngles = outGointSliceAngles\n        const leavingArcs: QueueTask = { type: \"sections\", input: this.generateArcs(\"remove\") }\n        this.background.enqueue({ type: 'duration', input: 400 })\n        this.background.enqueue(leavingArcs)\n        this.sliceSet = []\n    }\n\n    updateRingSet(ringSet: string[], ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } }) {\n        const { ringSet: oldRingSet } = this\n        this.ringSet = ringSet\n        if (oldRingSet.length === 0) {\n            this.background.enqueue({ type: 'duration', input: 400 / ringSet.length })\n            const startingHeights = Object.fromEntries(ringSet.map(ring => [ring, { innerRadius: 0, outerRadius: 0 }]))\n            this.ringHeights = startingHeights\n            this.background.enqueue({ type: 'sections', input: this.generateArcs() })\n            ringSet.forEach((ring, i) => {\n                const intermediateRingSet = ringSet.slice(i)\n                const { innerRadius, outerRadius } = ringHeights[ring]!\n                this.ringHeights[ring] = { innerRadius, outerRadius }\n                intermediateRingSet.forEach(ring => this.ringHeights[ring] = { innerRadius, outerRadius })\n                const arcsWIthRing = this.generateArcs()\n                this.background.enqueue({ type: 'sections', input: arcsWIthRing })\n            })\n        }\n        this.ringHeights = ringHeights\n        this.background.enqueue({ type: \"sections\", input: this.generateArcs() })\n        this.background.dequeue()\n        this.getPathPoints()\n    }\n\n    removeRings() {\n        const { ringSet } = this\n        this.background.enqueue({ type: 'duration', input: 400 / ringSet.length })\n        ringSet.forEach((ring, i) => {\n            const { outerRadius } = this.ringHeights[ring]!\n            this.ringHeights[ring] = { innerRadius: outerRadius, outerRadius }\n            const arcsWIthRing = this.generateArcs(\"remove\")\n            this.background.enqueue({ type: 'sections', input: arcsWIthRing })\n            this.ringSet = ringSet.slice(i)\n            delete this.ringHeights[ring]\n        })\n        this.ringSet = []\n    }\n\n    getPathPoints() {\n        console.log('getting points')\n        const { generator} = this\n        const sectionCoords: [number, number, number][] = []\n        const sectionVerts: number[] = []\n        const arcs = this.generateArcs() //<--NOTE: destrcutring the method from \"this\" causes an error. look into that\n        const {idSet, arcCount} = this\n        arcs.forEach(function (d, i) {\n                //itterate through subsections\n                d.subsections.forEach(sub => {\n                    // triangulate the polygon\n                    const path = generator(sub) || \"\",\n                    num_points = 100,\n                    points: number[] = [],\n                    pathProperties = new svgPathProperties(path),\n                    pathLength = pathProperties.getTotalLength()\n                    for (let i = 0; i < num_points; ++i) {\n                        let { x, y } = pathProperties.getPointAtLength(i * pathLength / (num_points - 1))\n                        points.push(x)\n                        points.push(y)\n                    }\n                    const idIndex = idSet.getIndex(sub.id)\n                    const ears = earcut(points)//<--returns the indexes of x coordinates of the triangle vertices in the points array\n                        //fetch the coordiantes of the triangle vertices from the points array\n                        for (let i = 0; i < ears.length; i++) {\n                            const index = ears[i] * 2\n                            sectionVerts.push(points[index], points[index + 1], idIndex);\n                        }\n                    //     vertices = ears.reduce<[number, number, number][]>((acc, index) => {\n                    //         const i = index * 2\n                    //         return [...acc, [points[i]!, points[i + 1]!, idIndex]]\n                    //     }, [])\n                    // sectionVerts[d.id] = vertices\n\n                    //seed the positions within the polygon\n                    const { startAngle, endAngle, innerRadius, outerRadius, id } = sub\n                    // const centroid = arc().centroid({startAngle, endAngle, innerRadius, outerRadius})\n                    // const centroid = [Math.round(x), Math.round(y)]\n                    for (let i = 0; i < arcCount[id]; ++i) {\n                            const randomClampedR = Math.random() * (outerRadius - innerRadius) + innerRadius,\n                                randomClampedTheta = (Math.random() * (endAngle - startAngle) + startAngle) - Math.PI / 2,\n                                x = Math.cos(randomClampedTheta) * randomClampedR,\n                                y = Math.sin(randomClampedTheta) * randomClampedR\n                            sectionCoords.push([x, y, idIndex])\n                            // const jitterX = Math.random()\n                            // const jitterY = Math.random()\n                            // sectionCoords.push(centroid[0] + jitterX, centroid[1] + jitterY, idIndex)\n                    }\n                })\n                \n        })\n        self.postMessage({ sectionVerts, sectionCoords})\n    }\n}\n\nconst brw = new worker()\n\nself.addEventListener('message', msg => {\n    const {\n        type,\n        canvas,\n        w,\n        h,\n        r,\n        ringSet,\n        ringHeights,\n        sliceSet,\n        sliceAngles,\n        sliceColors,\n        arcCount\n    }:\n        {\n            type: string,\n            canvas?: OffscreenCanvas,\n            w?: number,\n            h?: number,\n            r?: number,\n            ringSet?: string[],\n            sliceSet?: string[],\n            ringHeights?: { [ring: string]: { innerRadius: number, outerRadius: number } }\n            sliceAngles?: { [slice: string]: { startAngle: number, endAngle: number } }\n            sliceColors?: { [slice: string]: string[] }\n            arcCount?:  { [arc_id:string]: number }\n        } = msg.data\n    if (type === 'set_ctx' && canvas) {\n        const ctx = canvas.getContext('2d')\n        brw.setContext(ctx!)\n    }\n    if (type === 'set_dimensions' && w && h && r) {\n        brw.setDimensions(w, h, r)\n    }\n    if (type === 'init_chart' && ringSet && ringHeights && sliceSet && sliceAngles && sliceColors) {\n        brw.initChart(ringSet, ringHeights, sliceSet, sliceAngles, sliceColors)\n    }\n    if (type === 'update_slice_set' && sliceSet && sliceAngles && sliceColors) {\n        brw.updateSliceSet(sliceSet, sliceAngles, sliceColors)\n    }\n    if (type === 'update_ring_set' && ringSet && ringHeights) {\n        brw.updateRingSet(ringSet, ringHeights)\n    }\n    if (type === 'remove_rings') {\n        brw.removeRings()\n    }\n    if (type === \"update_arc_count\" && arcCount){\n        brw.updateArcCount(arcCount)\n    }\n    if (type === \"update_ring_heights\" && ringHeights){\n        brw.updateRingHeights(ringHeights)\n    }\n    if (type === \"update_slice_angles\" && sliceAngles){\n        brw.updateSliceAngles(sliceAngles)\n    }\n    if (type === 'remove_slices') {\n        brw.removeSlices()\n    }\n    if (type === 'get_points'){\n        brw.getPathPoints()\n    }\n})","//this is probbaly overkill, but I want a real queue\nexport class Queue<T> implements QueueInterface<T> {\n    _oldestIndex = 1\n    _newestIndex = 1\n    _storage:{[index:number]:T} = {}\n\n    size(){\n        return this._newestIndex - this._oldestIndex\n    }\n\n    enqueue(datum:T){\n        this._storage[this._newestIndex] = datum\n        this._newestIndex++\n    }\n\n    dequeue(){\n        let oldestIndex = this._oldestIndex,\n        newestIndex = this._newestIndex,\n        deletedData;\n\n    if (oldestIndex !== newestIndex) {\n        deletedData = this._storage[oldestIndex];\n        delete this._storage[oldestIndex];\n        this._oldestIndex++;\n        return deletedData;\n    }\n    }\n}","import { BaseType, select, Selection } from \"d3-selection\";\nimport { easePolyInOut } from \"d3-ease\";\nimport { timer } from \"d3-timer\";\nimport transition from 'd3-transition' //<--there's some kind of bug in d3 where I have to import transition into the namespace to use select(...).transition()\n\nfunction pizza(): typeof chart {\n    let queue: QueueInterface<QueueTask>,\n        tasks: QueueTask,\n        interpolator: (from: any, to: any) => (t: number) => any,\n        generator: any,\n        draw: UpdateHandler,\n        dequeue: UpdateHandler,\n        enqueue: UpdateHandler\n    function chart(selection: Selection<Document, unknown, null, undefined>) {\n        selection.each(function () {\n            const dataContainer = select(this).append('custom')\n            //private variables\n            let duration = 250,\n                current: { [id: string]: any } = {},\n                transitionId = ''\n\n            enqueue = function () {\n                queue.enqueue(tasks)\n            }\n\n            dequeue = function () {\n                let currentTask = queue.dequeue()\n                if (currentTask) {\n                    const { type, input } = currentTask\n                    switch (type) {\n                        case 'sections':\n                            transitionId = input[0] ? input[0].id : ''\n                            updateData(input)\n                            break;\n                        case 'duration':\n                            duration = input\n                            dequeue()\n                        default:\n                            break;\n                    }\n                } else {\n                    duration = 250\n                    transitionId = \"\"\n                }\n            }\n\n            function updateData(sections: Section[]) {\n\n                const dataBinding = dataContainer.selectAll<HTMLElement, Section>(\"custom.section\")\n                    .data(sections, function (d) { return d.id || select(this).attr('id') })\n\n                dataBinding\n                    .exit()\n                    .each(function () {\n                        const id = select(this).attr('id')\n                        delete current[id]\n                    })\n                    .remove()\n\n                transition(dataBinding)\n\n                dataBinding\n                    .enter()\n                    .append(\"custom\")\n                    .attr('id', section => section.id)\n                    .classed(\"section\", true)\n                    .append('path')\n                    .attr('fill', section => section.fill)\n                    .attr('d', section => generator(section))\n                    .attr('opacity', 1)\n                    .each(function (s) {\n                        current = { ...current, [s.id]: { ...s } }\n                    })\n            }\n\n            const transition = function (selection: Selection<HTMLElement, Section, BaseType, unknown>) {\n                const t = timer(function (elapsed) {\n                    draw();\n                    if (elapsed > duration + 100) t.stop();\n                })\n\n                selection\n                    .select('path')\n                    .transition()\n                    .duration(duration)\n                    .ease(easePolyInOut.exponent(3))\n                    .attr('opacity', 1)\n                    .attrTween(\"d\", function (a: Section) {\n                        const from = { ...current[a.id] }\n                        const i = interpolator(from, a);\n                        return (t: number): string => {\n                            return generator(i(t))\n                        };\n                    })\n                    .attr('fill', d => d.fill)\n                    .end()\n                    .catch(() => { console.log('rejected ') })\n                    .then(() => {\n                        selection\n                            .each(function (d) {\n                                current = { ...current, [d.id]: d }\n                            })\n                        dequeue()\n                    })\n            }\n\n            //boot\n           dequeue()\n        })\n    }\n\n    chart.interpolator = function (value: typeof interpolator) {\n        interpolator = value\n        return chart\n    }\n\n    chart.generator = function (value: typeof generator) {\n        generator = value\n        return chart\n    }\n\n    chart.draw = function (value: UpdateHandler): typeof chart {\n        draw = value\n        return chart\n    }\n\n    chart.queue = function (value: QueueInterface<QueueTask>) {\n        queue = value\n        return chart\n    }\n    chart.enqueue = function (value: QueueTask) {\n        tasks = value\n        if (typeof enqueue === 'function') enqueue()\n        return chart\n    }\n    chart.dequeue = function () {\n        if (typeof dequeue === 'function') dequeue()\n        return chart\n    }\n    return chart\n}\n\nexport default pizza\n\n","// http://geoexamples.com/path-properties/ v1.0.13 Copyright 2022 Roger Veciana i Rovira\nfunction t(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function n(t){return function(t){if(Array.isArray(t))return e(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,n){if(!t)return;if(\"string\"==typeof t)return e(t,n);var i=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===i&&t.constructor&&(i=t.constructor.name);if(\"Map\"===i||\"Set\"===i)return Array.from(t);if(\"Arguments\"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return e(t,n)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function e(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,i=new Array(n);e<n;e++)i[e]=t[e];return i}var i={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},h=/([astvzqmhlc])([^astvzqmhlc]*)/gi,r=/-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi,s=function(t){var n=t.match(r);return n?n.map(Number):[]},a=function(n,e,i,h){var r=this;t(this,\"x0\",void 0),t(this,\"x1\",void 0),t(this,\"y0\",void 0),t(this,\"y1\",void 0),t(this,\"getTotalLength\",(function(){return Math.sqrt(Math.pow(r.x0-r.x1,2)+Math.pow(r.y0-r.y1,2))})),t(this,\"getPointAtLength\",(function(t){var n=t/Math.sqrt(Math.pow(r.x0-r.x1,2)+Math.pow(r.y0-r.y1,2));n=Number.isNaN(n)?1:n;var e=(r.x1-r.x0)*n,i=(r.y1-r.y0)*n;return{x:r.x0+e,y:r.y0+i}})),t(this,\"getTangentAtLength\",(function(t){var n=Math.sqrt((r.x1-r.x0)*(r.x1-r.x0)+(r.y1-r.y0)*(r.y1-r.y0));return{x:-(r.x1-r.x0)/n,y:-(r.y1-r.y0)/n}})),t(this,\"getPropertiesAtLength\",(function(t){var n=r.getPointAtLength(t),e=r.getTangentAtLength(t);return{x:n.x,y:n.y,tangentX:e.x,tangentY:e.y}})),this.x0=n,this.x1=e,this.y0=i,this.y1=h},o=function(n,e,i,h,r,s,a,o,l){var c=this;t(this,\"x0\",void 0),t(this,\"y0\",void 0),t(this,\"rx\",void 0),t(this,\"ry\",void 0),t(this,\"xAxisRotate\",void 0),t(this,\"LargeArcFlag\",void 0),t(this,\"SweepFlag\",void 0),t(this,\"x1\",void 0),t(this,\"y1\",void 0),t(this,\"length\",void 0),t(this,\"getTotalLength\",(function(){return c.length})),t(this,\"getPointAtLength\",(function(t){t<0?t=0:t>c.length&&(t=c.length);var n=g({x:c.x0,y:c.y0},c.rx,c.ry,c.xAxisRotate,c.LargeArcFlag,c.SweepFlag,{x:c.x1,y:c.y1},t/c.length);return{x:n.x,y:n.y}})),t(this,\"getTangentAtLength\",(function(t){t<0?t=0:t>c.length&&(t=c.length);var n,e=.05,i=c.getPointAtLength(t);t<0?t=0:t>c.length&&(t=c.length);var h=(n=t<c.length-e?c.getPointAtLength(t+e):c.getPointAtLength(t-e)).x-i.x,r=n.y-i.y,s=Math.sqrt(h*h+r*r);return t<c.length-e?{x:-h/s,y:-r/s}:{x:h/s,y:r/s}})),t(this,\"getPropertiesAtLength\",(function(t){var n=c.getTangentAtLength(t),e=c.getPointAtLength(t);return{x:e.x,y:e.y,tangentX:n.x,tangentY:n.y}})),this.x0=n,this.y0=e,this.rx=i,this.ry=h,this.xAxisRotate=r,this.LargeArcFlag=s,this.SweepFlag=a,this.x1=o,this.y1=l;var f=u(300,(function(t){return g({x:n,y:e},i,h,r,s,a,{x:o,y:l},t)}));this.length=f.arcLength},g=function(t,n,e,i,h,r,s,a){n=Math.abs(n),e=Math.abs(e),i=l(i,360);var o=c(i);if(t.x===s.x&&t.y===s.y)return{x:t.x,y:t.y,ellipticalArcAngle:0};if(0===n||0===e)return{x:0,y:0,ellipticalArcAngle:0};var g=(t.x-s.x)/2,u=(t.y-s.y)/2,f={x:Math.cos(o)*g+Math.sin(o)*u,y:-Math.sin(o)*g+Math.cos(o)*u},y=Math.pow(f.x,2)/Math.pow(n,2)+Math.pow(f.y,2)/Math.pow(e,2);y>1&&(n=Math.sqrt(y)*n,e=Math.sqrt(y)*e);var p=(Math.pow(n,2)*Math.pow(e,2)-Math.pow(n,2)*Math.pow(f.y,2)-Math.pow(e,2)*Math.pow(f.x,2))/(Math.pow(n,2)*Math.pow(f.y,2)+Math.pow(e,2)*Math.pow(f.x,2));p=p<0?0:p;var v=(h!==r?1:-1)*Math.sqrt(p),M=v*(n*f.y/e),L=v*(-e*f.x/n),w={x:Math.cos(o)*M-Math.sin(o)*L+(t.x+s.x)/2,y:Math.sin(o)*M+Math.cos(o)*L+(t.y+s.y)/2},A={x:(f.x-M)/n,y:(f.y-L)/e},d=x({x:1,y:0},A),P=x(A,{x:(-f.x-M)/n,y:(-f.y-L)/e});!r&&P>0?P-=2*Math.PI:r&&P<0&&(P+=2*Math.PI);var b=d+(P%=2*Math.PI)*a,T=n*Math.cos(b),m=e*Math.sin(b);return{x:Math.cos(o)*T-Math.sin(o)*m+w.x,y:Math.sin(o)*T+Math.cos(o)*m+w.y,ellipticalArcStartAngle:d,ellipticalArcEndAngle:d+P,ellipticalArcAngle:b,ellipticalArcCenter:w,resultantRx:n,resultantRy:e}},u=function(t,n){t=t||500;for(var e,i=0,h=[],r=[],s=n(0),a=0;a<t;a++){var o=y(a*(1/t),0,1);e=n(o),i+=f(s,e),r.push([s,e]),h.push({t:o,arcLength:i}),s=e}return e=n(1),r.push([s,e]),i+=f(s,e),h.push({t:1,arcLength:i}),{arcLength:i,arcLengthMap:h,approximationLines:r}},l=function(t,n){return(t%n+n)%n},c=function(t){return t*(Math.PI/180)},f=function(t,n){return Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2))},y=function(t,n,e){return Math.min(Math.max(t,n),e)},x=function(t,n){var e=t.x*n.x+t.y*n.y,i=Math.sqrt((Math.pow(t.x,2)+Math.pow(t.y,2))*(Math.pow(n.x,2)+Math.pow(n.y,2)));return(t.x*n.y-t.y*n.x<0?-1:1)*Math.acos(e/i)},p=[[],[],[-.5773502691896257,.5773502691896257],[0,-.7745966692414834,.7745966692414834],[-.33998104358485626,.33998104358485626,-.8611363115940526,.8611363115940526],[0,-.5384693101056831,.5384693101056831,-.906179845938664,.906179845938664],[.6612093864662645,-.6612093864662645,-.2386191860831969,.2386191860831969,-.932469514203152,.932469514203152],[0,.4058451513773972,-.4058451513773972,-.7415311855993945,.7415311855993945,-.9491079123427585,.9491079123427585],[-.1834346424956498,.1834346424956498,-.525532409916329,.525532409916329,-.7966664774136267,.7966664774136267,-.9602898564975363,.9602898564975363],[0,-.8360311073266358,.8360311073266358,-.9681602395076261,.9681602395076261,-.3242534234038089,.3242534234038089,-.6133714327005904,.6133714327005904],[-.14887433898163122,.14887433898163122,-.4333953941292472,.4333953941292472,-.6794095682990244,.6794095682990244,-.8650633666889845,.8650633666889845,-.9739065285171717,.9739065285171717],[0,-.26954315595234496,.26954315595234496,-.5190961292068118,.5190961292068118,-.7301520055740494,.7301520055740494,-.8870625997680953,.8870625997680953,-.978228658146057,.978228658146057],[-.1252334085114689,.1252334085114689,-.3678314989981802,.3678314989981802,-.5873179542866175,.5873179542866175,-.7699026741943047,.7699026741943047,-.9041172563704749,.9041172563704749,-.9815606342467192,.9815606342467192],[0,-.2304583159551348,.2304583159551348,-.44849275103644687,.44849275103644687,-.6423493394403402,.6423493394403402,-.8015780907333099,.8015780907333099,-.9175983992229779,.9175983992229779,-.9841830547185881,.9841830547185881],[-.10805494870734367,.10805494870734367,-.31911236892788974,.31911236892788974,-.5152486363581541,.5152486363581541,-.6872929048116855,.6872929048116855,-.827201315069765,.827201315069765,-.9284348836635735,.9284348836635735,-.9862838086968123,.9862838086968123],[0,-.20119409399743451,.20119409399743451,-.3941513470775634,.3941513470775634,-.5709721726085388,.5709721726085388,-.7244177313601701,.7244177313601701,-.8482065834104272,.8482065834104272,-.937273392400706,.937273392400706,-.9879925180204854,.9879925180204854],[-.09501250983763744,.09501250983763744,-.2816035507792589,.2816035507792589,-.45801677765722737,.45801677765722737,-.6178762444026438,.6178762444026438,-.755404408355003,.755404408355003,-.8656312023878318,.8656312023878318,-.9445750230732326,.9445750230732326,-.9894009349916499,.9894009349916499],[0,-.17848418149584785,.17848418149584785,-.3512317634538763,.3512317634538763,-.5126905370864769,.5126905370864769,-.6576711592166907,.6576711592166907,-.7815140038968014,.7815140038968014,-.8802391537269859,.8802391537269859,-.9506755217687678,.9506755217687678,-.9905754753144174,.9905754753144174],[-.0847750130417353,.0847750130417353,-.2518862256915055,.2518862256915055,-.41175116146284263,.41175116146284263,-.5597708310739475,.5597708310739475,-.6916870430603532,.6916870430603532,-.8037049589725231,.8037049589725231,-.8926024664975557,.8926024664975557,-.9558239495713977,.9558239495713977,-.9915651684209309,.9915651684209309],[0,-.16035864564022537,.16035864564022537,-.31656409996362983,.31656409996362983,-.46457074137596094,.46457074137596094,-.600545304661681,.600545304661681,-.7209661773352294,.7209661773352294,-.8227146565371428,.8227146565371428,-.9031559036148179,.9031559036148179,-.96020815213483,.96020815213483,-.9924068438435844,.9924068438435844],[-.07652652113349734,.07652652113349734,-.22778585114164507,.22778585114164507,-.37370608871541955,.37370608871541955,-.5108670019508271,.5108670019508271,-.636053680726515,.636053680726515,-.7463319064601508,.7463319064601508,-.8391169718222188,.8391169718222188,-.912234428251326,.912234428251326,-.9639719272779138,.9639719272779138,-.9931285991850949,.9931285991850949],[0,-.1455618541608951,.1455618541608951,-.2880213168024011,.2880213168024011,-.4243421202074388,.4243421202074388,-.5516188358872198,.5516188358872198,-.6671388041974123,.6671388041974123,-.7684399634756779,.7684399634756779,-.8533633645833173,.8533633645833173,-.9200993341504008,.9200993341504008,-.9672268385663063,.9672268385663063,-.9937521706203895,.9937521706203895],[-.06973927331972223,.06973927331972223,-.20786042668822127,.20786042668822127,-.34193582089208424,.34193582089208424,-.469355837986757,.469355837986757,-.5876404035069116,.5876404035069116,-.6944872631866827,.6944872631866827,-.7878168059792081,.7878168059792081,-.8658125777203002,.8658125777203002,-.926956772187174,.926956772187174,-.9700604978354287,.9700604978354287,-.9942945854823992,.9942945854823992],[0,-.1332568242984661,.1332568242984661,-.26413568097034495,.26413568097034495,-.3903010380302908,.3903010380302908,-.5095014778460075,.5095014778460075,-.6196098757636461,.6196098757636461,-.7186613631319502,.7186613631319502,-.8048884016188399,.8048884016188399,-.8767523582704416,.8767523582704416,-.9329710868260161,.9329710868260161,-.9725424712181152,.9725424712181152,-.9947693349975522,.9947693349975522],[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213]],v=[[],[],[1,1],[.8888888888888888,.5555555555555556,.5555555555555556],[.6521451548625461,.6521451548625461,.34785484513745385,.34785484513745385],[.5688888888888889,.47862867049936647,.47862867049936647,.23692688505618908,.23692688505618908],[.3607615730481386,.3607615730481386,.46791393457269104,.46791393457269104,.17132449237917036,.17132449237917036],[.4179591836734694,.3818300505051189,.3818300505051189,.27970539148927664,.27970539148927664,.1294849661688697,.1294849661688697],[.362683783378362,.362683783378362,.31370664587788727,.31370664587788727,.22238103445337448,.22238103445337448,.10122853629037626,.10122853629037626],[.3302393550012598,.1806481606948574,.1806481606948574,.08127438836157441,.08127438836157441,.31234707704000286,.31234707704000286,.26061069640293544,.26061069640293544],[.29552422471475287,.29552422471475287,.26926671930999635,.26926671930999635,.21908636251598204,.21908636251598204,.1494513491505806,.1494513491505806,.06667134430868814,.06667134430868814],[.2729250867779006,.26280454451024665,.26280454451024665,.23319376459199048,.23319376459199048,.18629021092773426,.18629021092773426,.1255803694649046,.1255803694649046,.05566856711617366,.05566856711617366],[.24914704581340277,.24914704581340277,.2334925365383548,.2334925365383548,.20316742672306592,.20316742672306592,.16007832854334622,.16007832854334622,.10693932599531843,.10693932599531843,.04717533638651183,.04717533638651183],[.2325515532308739,.22628318026289723,.22628318026289723,.2078160475368885,.2078160475368885,.17814598076194574,.17814598076194574,.13887351021978725,.13887351021978725,.09212149983772845,.09212149983772845,.04048400476531588,.04048400476531588],[.2152638534631578,.2152638534631578,.2051984637212956,.2051984637212956,.18553839747793782,.18553839747793782,.15720316715819355,.15720316715819355,.12151857068790319,.12151857068790319,.08015808715976021,.08015808715976021,.03511946033175186,.03511946033175186],[.2025782419255613,.19843148532711158,.19843148532711158,.1861610000155622,.1861610000155622,.16626920581699392,.16626920581699392,.13957067792615432,.13957067792615432,.10715922046717194,.10715922046717194,.07036604748810812,.07036604748810812,.03075324199611727,.03075324199611727],[.1894506104550685,.1894506104550685,.18260341504492358,.18260341504492358,.16915651939500254,.16915651939500254,.14959598881657674,.14959598881657674,.12462897125553388,.12462897125553388,.09515851168249279,.09515851168249279,.062253523938647894,.062253523938647894,.027152459411754096,.027152459411754096],[.17944647035620653,.17656270536699264,.17656270536699264,.16800410215645004,.16800410215645004,.15404576107681028,.15404576107681028,.13513636846852548,.13513636846852548,.11188384719340397,.11188384719340397,.08503614831717918,.08503614831717918,.0554595293739872,.0554595293739872,.02414830286854793,.02414830286854793],[.1691423829631436,.1691423829631436,.16427648374583273,.16427648374583273,.15468467512626524,.15468467512626524,.14064291467065065,.14064291467065065,.12255520671147846,.12255520671147846,.10094204410628717,.10094204410628717,.07642573025488905,.07642573025488905,.0497145488949698,.0497145488949698,.02161601352648331,.02161601352648331],[.1610544498487837,.15896884339395434,.15896884339395434,.15276604206585967,.15276604206585967,.1426067021736066,.1426067021736066,.12875396253933621,.12875396253933621,.11156664554733399,.11156664554733399,.09149002162245,.09149002162245,.06904454273764123,.06904454273764123,.0448142267656996,.0448142267656996,.019461788229726478,.019461788229726478],[.15275338713072584,.15275338713072584,.14917298647260374,.14917298647260374,.14209610931838204,.14209610931838204,.13168863844917664,.13168863844917664,.11819453196151841,.11819453196151841,.10193011981724044,.10193011981724044,.08327674157670475,.08327674157670475,.06267204833410907,.06267204833410907,.04060142980038694,.04060142980038694,.017614007139152118,.017614007139152118],[.14608113364969041,.14452440398997005,.14452440398997005,.13988739479107315,.13988739479107315,.13226893863333747,.13226893863333747,.12183141605372853,.12183141605372853,.10879729916714838,.10879729916714838,.09344442345603386,.09344442345603386,.0761001136283793,.0761001136283793,.057134425426857205,.057134425426857205,.036953789770852494,.036953789770852494,.016017228257774335,.016017228257774335],[.13925187285563198,.13925187285563198,.13654149834601517,.13654149834601517,.13117350478706238,.13117350478706238,.12325237681051242,.12325237681051242,.11293229608053922,.11293229608053922,.10041414444288096,.10041414444288096,.08594160621706773,.08594160621706773,.06979646842452049,.06979646842452049,.052293335152683286,.052293335152683286,.03377490158481415,.03377490158481415,.0146279952982722,.0146279952982722],[.13365457218610619,.1324620394046966,.1324620394046966,.12890572218808216,.12890572218808216,.12304908430672953,.12304908430672953,.11499664022241136,.11499664022241136,.10489209146454141,.10489209146454141,.09291576606003515,.09291576606003515,.07928141177671895,.07928141177671895,.06423242140852585,.06423242140852585,.04803767173108467,.04803767173108467,.030988005856979445,.030988005856979445,.013411859487141771,.013411859487141771],[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872]],M=[[1],[1,1],[1,2,1],[1,3,3,1]],L=function(t,n,e){return{x:(1-e)*(1-e)*(1-e)*t[0]+3*(1-e)*(1-e)*e*t[1]+3*(1-e)*e*e*t[2]+e*e*e*t[3],y:(1-e)*(1-e)*(1-e)*n[0]+3*(1-e)*(1-e)*e*n[1]+3*(1-e)*e*e*n[2]+e*e*e*n[3]}},w=function(t,n,e){return d([3*(t[1]-t[0]),3*(t[2]-t[1]),3*(t[3]-t[2])],[3*(n[1]-n[0]),3*(n[2]-n[1]),3*(n[3]-n[2])],e)},A=function(t,n,e){var i,h,r;i=e/2,h=0;for(var s=0;s<20;s++)r=i*p[20][s]+i,h+=v[20][s]*T(t,n,r);return i*h},d=function(t,n,e){return{x:(1-e)*(1-e)*t[0]+2*(1-e)*e*t[1]+e*e*t[2],y:(1-e)*(1-e)*n[0]+2*(1-e)*e*n[1]+e*e*n[2]}},P=function(t,n,e){void 0===e&&(e=1);var i=t[0]-2*t[1]+t[2],h=n[0]-2*n[1]+n[2],r=2*t[1]-2*t[0],s=2*n[1]-2*n[0],a=4*(i*i+h*h),o=4*(i*r+h*s),g=r*r+s*s;if(0===a)return e*Math.sqrt(Math.pow(t[2]-t[0],2)+Math.pow(n[2]-n[0],2));var u=o/(2*a),l=e+u,c=g/a-u*u,f=l*l+c>0?Math.sqrt(l*l+c):0,y=u*u+c>0?Math.sqrt(u*u+c):0,x=u+Math.sqrt(u*u+c)!==0?c*Math.log(Math.abs((l+f)/(u+y))):0;return Math.sqrt(a)/2*(l*f-u*y+x)},b=function(t,n,e){return{x:2*(1-e)*(t[1]-t[0])+2*e*(t[2]-t[1]),y:2*(1-e)*(n[1]-n[0])+2*e*(n[2]-n[1])}};function T(t,n,e){var i=m(1,e,t),h=m(1,e,n),r=i*i+h*h;return Math.sqrt(r)}var m=function t(n,e,i){var h,r,s=i.length-1;if(0===s)return 0;if(0===n){r=0;for(var a=0;a<=s;a++)r+=M[s][a]*Math.pow(1-e,s-a)*Math.pow(e,a)*i[a];return r}h=new Array(s);for(var o=0;o<s;o++)h[o]=s*(i[o+1]-i[o]);return t(n-1,e,h)},q=function(t,n,e){for(var i=1,h=t/n,r=(t-e(h))/n,s=0;i>.001;){var a=e(h+r),o=Math.abs(t-a)/n;if(o<i)i=o,h+=r;else{var g=e(h-r),u=Math.abs(t-g)/n;u<i?(i=u,h-=r):r/=2}if(++s>500)break}return h},_=function(n,e,i,h,r,s,a,o){var g=this;t(this,\"a\",void 0),t(this,\"b\",void 0),t(this,\"c\",void 0),t(this,\"d\",void 0),t(this,\"length\",void 0),t(this,\"getArcLength\",void 0),t(this,\"getPoint\",void 0),t(this,\"getDerivative\",void 0),t(this,\"getTotalLength\",(function(){return g.length})),t(this,\"getPointAtLength\",(function(t){var n=[g.a.x,g.b.x,g.c.x,g.d.x],e=[g.a.y,g.b.y,g.c.y,g.d.y],i=q(t,g.length,(function(t){return g.getArcLength(n,e,t)}));return g.getPoint(n,e,i)})),t(this,\"getTangentAtLength\",(function(t){var n=[g.a.x,g.b.x,g.c.x,g.d.x],e=[g.a.y,g.b.y,g.c.y,g.d.y],i=q(t,g.length,(function(t){return g.getArcLength(n,e,t)})),h=g.getDerivative(n,e,i),r=Math.sqrt(h.x*h.x+h.y*h.y);return r>0?{x:h.x/r,y:h.y/r}:{x:0,y:0}})),t(this,\"getPropertiesAtLength\",(function(t){var n,e=[g.a.x,g.b.x,g.c.x,g.d.x],i=[g.a.y,g.b.y,g.c.y,g.d.y],h=q(t,g.length,(function(t){return g.getArcLength(e,i,t)})),r=g.getDerivative(e,i,h),s=Math.sqrt(r.x*r.x+r.y*r.y);n=s>0?{x:r.x/s,y:r.y/s}:{x:0,y:0};var a=g.getPoint(e,i,h);return{x:a.x,y:a.y,tangentX:n.x,tangentY:n.y}})),t(this,\"getC\",(function(){return g.c})),t(this,\"getD\",(function(){return g.d})),this.a={x:n,y:e},this.b={x:i,y:h},this.c={x:r,y:s},void 0!==a&&void 0!==o?(this.getArcLength=A,this.getPoint=L,this.getDerivative=w,this.d={x:a,y:o}):(this.getArcLength=P,this.getPoint=d,this.getDerivative=b,this.d={x:0,y:0}),this.length=this.getArcLength([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],1)},S=function(e){var r=this;t(this,\"length\",0),t(this,\"partial_lengths\",[]),t(this,\"functions\",[]),t(this,\"initial_point\",null),t(this,\"getPartAtLength\",(function(t){t<0?t=0:t>r.length&&(t=r.length);for(var n=r.partial_lengths.length-1;r.partial_lengths[n]>=t&&n>0;)n--;return n++,{fraction:t-r.partial_lengths[n-1],i:n}})),t(this,\"getTotalLength\",(function(){return r.length})),t(this,\"getPointAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getPointAtLength(n.fraction);if(r.initial_point)return r.initial_point;throw new Error(\"Wrong function at this part.\")})),t(this,\"getTangentAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getTangentAtLength(n.fraction);if(r.initial_point)return{x:0,y:0};throw new Error(\"Wrong function at this part.\")})),t(this,\"getPropertiesAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getPropertiesAtLength(n.fraction);if(r.initial_point)return{x:r.initial_point.x,y:r.initial_point.y,tangentX:0,tangentY:0};throw new Error(\"Wrong function at this part.\")})),t(this,\"getParts\",(function(){for(var t=[],n=0;n<r.functions.length;n++)if(null!==r.functions[n]){r.functions[n]=r.functions[n];var e={start:r.functions[n].getPointAtLength(0),end:r.functions[n].getPointAtLength(r.partial_lengths[n]-r.partial_lengths[n-1]),length:r.partial_lengths[n]-r.partial_lengths[n-1],getPointAtLength:r.functions[n].getPointAtLength,getTangentAtLength:r.functions[n].getTangentAtLength,getPropertiesAtLength:r.functions[n].getPropertiesAtLength};t.push(e)}return t}));for(var g,u=Array.isArray(e)?e:function(t){var e=(t&&t.length>0?t:\"M0,0\").match(h);if(!e)throw new Error(\"No path elements found in string \".concat(t));return e.reduce((function(t,e){var h=e.charAt(0),r=h.toLowerCase(),a=s(e.substr(1));for(\"m\"===r&&a.length>2&&(t.push([h].concat(n(a.splice(0,2)))),r=\"l\",h=\"m\"===h?\"l\":\"L\");a.length>=0;){if(a.length===i[r]){t.push([h].concat(n(a.splice(0,i[r]))));break}if(a.length<i[r])throw new Error('Malformed path data: \"'.concat(h,'\" must have ').concat(i[r],\" elements and has \").concat(a.length,\": \").concat(e));t.push([h].concat(n(a.splice(0,i[r]))))}return t}),[])}(e),l=[0,0],c=[0,0],f=[0,0],y=0;y<u.length;y++){if(\"M\"===u[y][0])f=[(l=[u[y][1],u[y][2]])[0],l[1]],this.functions.push(null),0===y&&(this.initial_point={x:u[y][1],y:u[y][2]});else if(\"m\"===u[y][0])f=[(l=[u[y][1]+l[0],u[y][2]+l[1]])[0],l[1]],this.functions.push(null);else if(\"L\"===u[y][0])this.length+=Math.sqrt(Math.pow(l[0]-u[y][1],2)+Math.pow(l[1]-u[y][2],2)),this.functions.push(new a(l[0],u[y][1],l[1],u[y][2])),l=[u[y][1],u[y][2]];else if(\"l\"===u[y][0])this.length+=Math.sqrt(Math.pow(u[y][1],2)+Math.pow(u[y][2],2)),this.functions.push(new a(l[0],u[y][1]+l[0],l[1],u[y][2]+l[1])),l=[u[y][1]+l[0],u[y][2]+l[1]];else if(\"H\"===u[y][0])this.length+=Math.abs(l[0]-u[y][1]),this.functions.push(new a(l[0],u[y][1],l[1],l[1])),l[0]=u[y][1];else if(\"h\"===u[y][0])this.length+=Math.abs(u[y][1]),this.functions.push(new a(l[0],l[0]+u[y][1],l[1],l[1])),l[0]=u[y][1]+l[0];else if(\"V\"===u[y][0])this.length+=Math.abs(l[1]-u[y][1]),this.functions.push(new a(l[0],l[0],l[1],u[y][1])),l[1]=u[y][1];else if(\"v\"===u[y][0])this.length+=Math.abs(u[y][1]),this.functions.push(new a(l[0],l[0],l[1],l[1]+u[y][1])),l[1]=u[y][1]+l[1];else if(\"z\"===u[y][0]||\"Z\"===u[y][0])this.length+=Math.sqrt(Math.pow(f[0]-l[0],2)+Math.pow(f[1]-l[1],2)),this.functions.push(new a(l[0],f[0],l[1],f[1])),l=[f[0],f[1]];else if(\"C\"===u[y][0])g=new _(l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4],u[y][5],u[y][6]),this.length+=g.getTotalLength(),l=[u[y][5],u[y][6]],this.functions.push(g);else if(\"c\"===u[y][0])(g=new _(l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4],l[0]+u[y][5],l[1]+u[y][6])).getTotalLength()>0?(this.length+=g.getTotalLength(),this.functions.push(g),l=[u[y][5]+l[0],u[y][6]+l[1]]):this.functions.push(new a(l[0],l[0],l[1],l[1]));else if(\"S\"===u[y][0]){if(y>0&&[\"C\",\"c\",\"S\",\"s\"].indexOf(u[y-1][0])>-1){if(g){var x=g.getC();g=new _(l[0],l[1],2*l[0]-x.x,2*l[1]-x.y,u[y][1],u[y][2],u[y][3],u[y][4])}}else g=new _(l[0],l[1],l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4]);g&&(this.length+=g.getTotalLength(),l=[u[y][3],u[y][4]],this.functions.push(g))}else if(\"s\"===u[y][0]){if(y>0&&[\"C\",\"c\",\"S\",\"s\"].indexOf(u[y-1][0])>-1){if(g){var p=g.getC(),v=g.getD();g=new _(l[0],l[1],l[0]+v.x-p.x,l[1]+v.y-p.y,l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4])}}else g=new _(l[0],l[1],l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4]);g&&(this.length+=g.getTotalLength(),l=[u[y][3]+l[0],u[y][4]+l[1]],this.functions.push(g))}else if(\"Q\"===u[y][0]){if(l[0]==u[y][1]&&l[1]==u[y][2]){var M=new a(u[y][1],u[y][3],u[y][2],u[y][4]);this.length+=M.getTotalLength(),this.functions.push(M)}else g=new _(l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);l=[u[y][3],u[y][4]],c=[u[y][1],u[y][2]]}else if(\"q\"===u[y][0]){if(0!=u[y][1]||0!=u[y][2])g=new _(l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);else{var L=new a(l[0]+u[y][1],l[0]+u[y][3],l[1]+u[y][2],l[1]+u[y][4]);this.length+=L.getTotalLength(),this.functions.push(L)}c=[l[0]+u[y][1],l[1]+u[y][2]],l=[u[y][3]+l[0],u[y][4]+l[1]]}else if(\"T\"===u[y][0]){if(y>0&&[\"Q\",\"q\",\"T\",\"t\"].indexOf(u[y-1][0])>-1)g=new _(l[0],l[1],2*l[0]-c[0],2*l[1]-c[1],u[y][1],u[y][2],void 0,void 0),this.functions.push(g),this.length+=g.getTotalLength();else{var w=new a(l[0],u[y][1],l[1],u[y][2]);this.functions.push(w),this.length+=w.getTotalLength()}c=[2*l[0]-c[0],2*l[1]-c[1]],l=[u[y][1],u[y][2]]}else if(\"t\"===u[y][0]){if(y>0&&[\"Q\",\"q\",\"T\",\"t\"].indexOf(u[y-1][0])>-1)g=new _(l[0],l[1],2*l[0]-c[0],2*l[1]-c[1],l[0]+u[y][1],l[1]+u[y][2],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);else{var A=new a(l[0],l[0]+u[y][1],l[1],l[1]+u[y][2]);this.length+=A.getTotalLength(),this.functions.push(A)}c=[2*l[0]-c[0],2*l[1]-c[1]],l=[u[y][1]+l[0],u[y][2]+l[1]]}else if(\"A\"===u[y][0]){var d=new o(l[0],l[1],u[y][1],u[y][2],u[y][3],1===u[y][4],1===u[y][5],u[y][6],u[y][7]);this.length+=d.getTotalLength(),l=[u[y][6],u[y][7]],this.functions.push(d)}else if(\"a\"===u[y][0]){var P=new o(l[0],l[1],u[y][1],u[y][2],u[y][3],1===u[y][4],1===u[y][5],l[0]+u[y][6],l[1]+u[y][7]);this.length+=P.getTotalLength(),l=[l[0]+u[y][6],l[1]+u[y][7]],this.functions.push(P)}this.partial_lengths.push(this.length)}},C=function(n){var e=this;if(t(this,\"inst\",void 0),t(this,\"getTotalLength\",(function(){return e.inst.getTotalLength()})),t(this,\"getPointAtLength\",(function(t){return e.inst.getPointAtLength(t)})),t(this,\"getTangentAtLength\",(function(t){return e.inst.getTangentAtLength(t)})),t(this,\"getPropertiesAtLength\",(function(t){return e.inst.getPropertiesAtLength(t)})),t(this,\"getParts\",(function(){return e.inst.getParts()})),this.inst=new S(n),!(this instanceof C))return new C(n)};export{C as svgPathProperties};\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","const partitionNumber = (num = 1, parts = 1) => {\n  let n = Math.floor(num / parts);\n  const arr = [];\n\n  for (let i = 0; i < parts; i++) {\n    arr.push(n);\n  }\n  if (arr.reduce((a, b) => a + b, 0) === num) {\n    return arr;\n  }\n  for (let i = 0; i < parts; i++) {\n    arr[i]++;\n    if (arr.reduce((a, b) => a + b, 0) === num) {\n      return arr;\n    }\n  }\n};\n\nexport default partitionNumber\n","/** constant time insert, lookup and delete */\nexport default class IndexedSet {\n  membersByIndex: { [member: string]: number } = {};\n  members: string[] = [];\n\n  /**\n   * @param {string} member member to add\n   * @return {boolean} indicates if the member was already in the set\n   */\n  insert(member: string): boolean {\n    const has = member in this.membersByIndex;\n    if (!has) {\n      this.membersByIndex[member] = this.members.length;\n      this.members.push(member);\n    }\n    return !has;\n  }\n\n  /**\n   * @param {string} member member to remove\n   * @return {boolean} indicates if the member was not in the set\n   */\n  remove(member: string): boolean {\n    const had = member in this.membersByIndex;\n    if (had) {\n      const indexToRemove = this.membersByIndex[member],\n        valueToKeep = this.members[this.members.length - 1];\n      this.members[indexToRemove] = valueToKeep;\n      this.membersByIndex[valueToKeep] = indexToRemove;\n      delete this.membersByIndex[member];\n      this.members.pop();\n    }\n    return had;\n  }\n\n  /**\n   * @param {string} member member to index\n   * @return {number} the index of the member or -1 if the member is not in the set\n   */\n  getIndex(member: string): number {\n    /** can't use the less verbose return this.membersByIndex[member] || -1 because index 0 will read as falsy */\n    const has = member in this.membersByIndex\n    if (has){\n        return this.membersByIndex[member]\n    }\n    return -1;\n  }\n\n  /**\n   * @param {number} index index of the member\n   * @return {string | boolean} the member or flase if the member not in the set\n   */\n  getMember(index: number): string | boolean{\n    const has = index < this.members.length\n    if (has){\n        return this.members[index]\n    }\n    return has\n  }\n}\n"],"names":["$jwO5r","parcelRequire","$e66c1d2470470c6c$export$3dc07afe418952bc","_oldestIndex","_newestIndex","_storage","size","this","enqueue","datum","dequeue","deletedData","oldestIndex","$04a8c6023ff1c037$export$2e2bcd8739ae039","queue","tasks","interpolator","generator","draw","chart","selection","each","dataContainer","default","append","duration","current","transitionId","currentTask","type","input","id","sections","dataBinding","selectAll","data","d","attr","exit","remove","transition","enter","section","classed","fill","s","updateData","t","$d4oT3","timer","elapsed","stop","select","ease","$6ucM5","polyInOut","exponent","attrTween","a","from","i","end","catch","console","log","then","value","$a112e980dd298f04$var$t","n","e","Object","defineProperty","enumerable","configurable","writable","$a112e980dd298f04$var$n","Array","isArray","$a112e980dd298f04$var$e","Symbol","iterator","prototype","toString","call","slice","constructor","name","test","TypeError","length","$a112e980dd298f04$var$i","c","h","l","m","q","v","z","$a112e980dd298f04$var$h","$a112e980dd298f04$var$r","$a112e980dd298f04$var$a","r","Math","sqrt","pow","x0","x1","y0","y1","Number","isNaN","x","y","getPointAtLength","getTangentAtLength","tangentX","tangentY","$a112e980dd298f04$var$o","o","$a112e980dd298f04$var$g","rx","ry","xAxisRotate","LargeArcFlag","SweepFlag","f","$a112e980dd298f04$var$u","arcLength","abs","$a112e980dd298f04$var$l","$a112e980dd298f04$var$c","ellipticalArcAngle","g","u","cos","sin","p","M","L","w","A","$a112e980dd298f04$var$x","P","PI","b","T","ellipticalArcStartAngle","ellipticalArcEndAngle","ellipticalArcCenter","resultantRx","resultantRy","$a112e980dd298f04$var$y","$a112e980dd298f04$var$f","push","arcLengthMap","approximationLines","min","max","acos","$a112e980dd298f04$var$p","$a112e980dd298f04$var$v","$a112e980dd298f04$var$M","$a112e980dd298f04$var$L","$a112e980dd298f04$var$w","$a112e980dd298f04$var$d","$a112e980dd298f04$var$A","$a112e980dd298f04$var$T","$a112e980dd298f04$var$P","$a112e980dd298f04$var$b","$a112e980dd298f04$var$m","$a112e980dd298f04$var$q","$a112e980dd298f04$var$_","getArcLength","getPoint","getDerivative","$a112e980dd298f04$var$S","partial_lengths","fraction","getPartAtLength","functions","initial_point","Error","getPropertiesAtLength","start","match","concat","reduce","charAt","toLowerCase","map","$a112e980dd298f04$var$s","substr","splice","getTotalLength","indexOf","getC","getD","$a112e980dd298f04$export$56776403033771b1","inst","getParts","$4c90258534db95a8$var$earcut","holeIndices","dim","minX","minY","maxX","maxY","invSize","hasHoles","outerLen","outerNode","$4c90258534db95a8$var$linkedList","triangles","next","prev","len","list","steiner","$4c90258534db95a8$var$getLeftmost","sort","$4c90258534db95a8$var$compareX","$4c90258534db95a8$var$eliminateHole","$4c90258534db95a8$var$eliminateHoles","$4c90258534db95a8$var$earcutLinked","clockwise","last","$4c90258534db95a8$var$signedArea","$4c90258534db95a8$var$insertNode","$4c90258534db95a8$var$equals","$4c90258534db95a8$var$removeNode","$4c90258534db95a8$var$filterPoints","again","$4c90258534db95a8$var$area","ear","pass","$4c90258534db95a8$var$zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","$4c90258534db95a8$var$sortLinked","$4c90258534db95a8$var$indexCurve","$4c90258534db95a8$var$isEarHashed","$4c90258534db95a8$var$isEar","$4c90258534db95a8$var$cureLocalIntersections","$4c90258534db95a8$var$splitEarcut","ax","bx","cx","ay","by","cy","$4c90258534db95a8$var$pointInTriangle","minZ","maxZ","$4c90258534db95a8$var$intersects","$4c90258534db95a8$var$locallyInside","$4c90258534db95a8$var$isValidDiagonal","$4c90258534db95a8$var$splitPolygon","hole","bridge","hx","hy","qx","Infinity","tan","mx","my","tanMin","$4c90258534db95a8$var$sectorContainsSector","$4c90258534db95a8$var$findHoleBridge","bridgeReverse","leftmost","px","py","$4c90258534db95a8$var$intersectsPolygon","inside","$4c90258534db95a8$var$middleInside","p1","p2","q1","q2","o1","$4c90258534db95a8$var$sign","o2","o3","o4","$4c90258534db95a8$var$onSegment","num","a2","$4c90258534db95a8$var$Node","b2","an","bp","sum","j","$4c90258534db95a8$exports","deviation","polygonArea","trianglesArea","flatten","result","vertices","holes","dimensions","holeIndex","$c125307c7c08a708$export$2e2bcd8739ae039","parts","floor","arr","$1b0682a4c335b108$export$2e2bcd8739ae039","membersByIndex","members","insert","member","has","had","indexToRemove","valueToKeep","pop","getIndex","getMember","index","$4ac34dd61ff1357d$var$DOMImplementation","$parcel$interopDefault","DOMImplementation","self","$4ac34dd61ff1357d$var$brw","background","ctx","canvasHeight","canvasWidth","dom","createDocument","ratio","$35YzH","ringSet","ringHeights","sliceSet","sliceAngles","sliceColors","path","innerRadius","outerRadius","startAngle","endAngle","poly","arcCount","idSet","setContext","setDimensions","updateArcCount","save","clearRect","lineWidth","setTransform","svgPath","strokeStyle","fillStyle","globalAlpha","includes","stroke","Path2D","restore","generateArcs","state","acc","ring","subsections","partitions","ceil","subarcId","theta","sa","ea","subid","slicePallet","arc","initChart","initialSections","flatMap","$37yMS","updateSliceAngles","updateRingHeights","updateSliceSet","oldSliceSet","fromEntries","startSlices","endSlices","removeSlices","outGointSliceAngles","leavingArcs","updateRingSet","oldRingSet","startingHeights","forEach","intermediateRingSet","arcsWIthRing","getPathPoints","removeRings","sectionCoords","sectionVerts","arcs","sub","points","pathProperties","pathLength","idIndex","ears","randomClampedR","random","randomClampedTheta","postMessage","addEventListener","msg","canvas","getContext"],"version":3,"file":"backgroundWorker.5faec161.js.map"}