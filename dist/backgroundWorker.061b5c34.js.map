{"mappings":"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","sources":["src/workers/backgroundWorker.ts","src/static/queue.ts","node_modules/svg-path-properties/dist/svg-path-properties.esm.js","node_modules/earcut/src/earcut.js"],"sourcesContent":["import { select, interpolate, color } from \"d3\";\nimport { arc } from \"d3-shape\";\nimport { Queue } from '../static/queue'\nimport renderBackground from \"../d3/renderBackground\"\nimport { svgPathProperties } from \"svg-path-properties\"\nimport earcut from \"earcut\";\n// @ts-ignore\nimport xmldom from \"../domparser_bundle\";\n\nconst DOMImplementation = xmldom.DOMImplementation;\n\nconst backgroundWorker: Worker = self as any\n\nclass worker {\n    background: ReturnType<typeof renderBackground> = renderBackground()\n    ctx: OffscreenCanvasRenderingContext2D | null = null\n    canvasHeight = 0\n    canvasWidth = 0\n    dom: Document = new DOMImplementation().createDocument()\n    ratio = 2\n    generator = arc()\n    ringSet: string[] = []\n    ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } } = {}\n    sliceSet: string[] = []\n    sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } } = {}\n    sliceColors: { [slice: string]: string[] } = {}\n    path = arc()({ innerRadius: 50, outerRadius: 300, startAngle: 0, endAngle: 97 * Math.PI / 180 })\n    poly = [10, 0, 0, 50, 60, 60, 70, 10]\n    setContext(ctx: OffscreenCanvasRenderingContext2D) {\n        this.ctx = ctx\n    }\n\n    setDimensions(w: number, h: number, r: number) {\n        this.canvasWidth = w\n        this.canvasHeight = h\n        this.ratio = r\n    }\n\n    draw() {\n        const { ctx, canvasWidth, canvasHeight, ratio, path, poly } = this\n        if (ctx) {\n            ctx.save();\n            ctx.clearRect(0, 0, Math.floor(canvasWidth * ratio), Math.floor(canvasHeight * ratio));\n            ctx.lineWidth = .75;\n            ctx.setTransform(ratio, 0, 0, ratio, Math.floor(canvasWidth * ratio) / 2, Math.floor(canvasHeight * ratio) / 2)\n            select(this.dom).selectAll(\"custom.section\").each(function (d: any, i) {\n                const path = select(this).select('path'),\n                    id = select(this).attr('id'),\n                    fill = path.attr('fill'),\n                    opacity = +path.attr('opacity'),\n                    svgPath = path.attr('d')\n                ctx.strokeStyle = '#000000'\n                ctx.fillStyle = fill\n                ctx.globalAlpha = .9 //<-- make the background a little opaqu so the shapes stand out\n                if (svgPath && ctx && !id.includes('_border')) {\n                    ctx.stroke(new Path2D(svgPath))\n                    ctx.fill(new Path2D(svgPath))\n                }\n            })\n            ctx.globalAlpha = 1\n            ctx.stroke()\n            ctx.restore()\n        }\n    }\n\n\n\n\n    generateArcs() {\n        const { ringSet, ringHeights, sliceSet, sliceColors, sliceAngles } = this\n        return sliceSet.reduce<Section[]>((acc, slice) => {\n            if (sliceAngles[slice]) {\n                const { startAngle, endAngle } = sliceAngles[slice]!\n                const sections = ringSet.reduce<Section[]>((acc, ring, j) => {\n                    if (ringHeights[ring]) {\n                        const { innerRadius, outerRadius } = ringHeights[ring]!\n                        const id = `_${slice}_${ring}`\n                        const slicePallet = sliceColors[slice]!\n                        const fill = slicePallet[j % slicePallet.length]!\n                        const arc = { id, innerRadius, outerRadius, startAngle, endAngle, fill }\n                        const border = { id: id + '_border', innerRadius: innerRadius + 5, outerRadius: outerRadius - 5, startAngle: startAngle + 5 * Math.PI / 180, endAngle: endAngle - 5 * Math.PI / 180, fill: 'black' }\n                        acc = [...acc, arc, border]\n                    }\n                    return acc\n                }, [])\n                acc = [...acc, ...sections]\n            }\n            return acc\n        }, [])\n\n    }\n\n    initChart(ringSet: string[], ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } }, sliceSet: string[], sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }, sliceColors: { [slice: string]: string[] }) {\n        const queue = new Queue<QueueTask>()\n        this.sliceColors = sliceColors\n        this.ringSet = ringSet\n        this.ringHeights = ringHeights\n        this.sliceSet = sliceSet\n        this.sliceAngles = sliceAngles\n        const initialSections: Section[] = sliceSet.flatMap((slice, i) => {\n            const { startAngle, endAngle } = sliceAngles[slice]!\n            return ringSet.map((ring, j) => {\n                const { innerRadius, outerRadius } = ringHeights[ring]!\n                const id = `_${slice}_${ring}`\n                const slicePallet = sliceColors[slice]!\n                const fill = slicePallet[j % slicePallet.length]!\n                return { id, innerRadius, outerRadius, startAngle, endAngle, fill }\n            })\n        })\n\n        queue.enqueue({ type: \"sections\", input: initialSections })\n\n        select(this.dom)\n            .call(\n                this.background\n                    .queue(queue)\n                    .generator(arc())\n                    .interpolator(interpolate)\n                    .draw(() => this.draw())\n            )\n    }\n\n    updateSliceAngles(sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }) {\n        this.sliceAngles = sliceAngles\n        this.generateArcs()\n    }\n\n    updateSliceSet(sliceSet: string[], sliceAngles: { [slice: string]: { startAngle: number, endAngle: number } }, sliceColors: { [key: string]: string[] }) {\n        const { sliceSet: oldSliceSet } = this\n        this.sliceSet = sliceSet\n        this.sliceColors = sliceColors\n        if (oldSliceSet.length === 0) {\n            this.sliceAngles = Object.fromEntries(sliceSet.map(slice => [slice, { startAngle: 0, endAngle: 0 }]))\n            const startSlices: QueueTask = { type: \"sections\", input: this.generateArcs() }\n            this.background.enqueue(startSlices)\n        }\n        this.sliceAngles = sliceAngles\n        this.getPathPoints()\n        const endSlices: QueueTask = { type: \"sections\", input: this.generateArcs() }\n        this.background.enqueue(endSlices)\n        this.background.dequeue()\n        // this.getPathPoints()\n    }\n\n    removeSlices() {\n        //enqueue the transition, but don't dequeue it\n        const { sliceSet } = this\n        const outGointSliceAngles = Object.fromEntries(sliceSet.map(slice => [slice, { startAngle: 2 * Math.PI, endAngle: 2 * Math.PI }]))\n        this.sliceAngles = outGointSliceAngles\n        const leavingArcs: QueueTask = { type: \"sections\", input: this.generateArcs() }\n        this.background.enqueue({ type: 'duration', input: 400 })\n        this.background.enqueue(leavingArcs)\n        this.sliceSet = []\n    }\n\n    updateRingSet(ringSet: string[], ringHeights: { [ring: string]: { innerRadius: number, outerRadius: number } }) {\n        const { ringSet: oldRingSet } = this\n        this.ringSet = ringSet\n        if (oldRingSet.length === 0) {\n            this.background.enqueue({ type: 'duration', input: 400 / ringSet.length })\n            const startingHeights = Object.fromEntries(ringSet.map(ring => [ring, { innerRadius: 0, outerRadius: 0 }]))\n            this.ringHeights = startingHeights\n            this.background.enqueue({ type: 'sections', input: this.generateArcs() })\n            ringSet.forEach((ring, i) => {\n                const intermediateRingSet = ringSet.slice(i)\n                const { innerRadius, outerRadius } = ringHeights[ring]!\n                this.ringHeights[ring] = { innerRadius, outerRadius }\n                intermediateRingSet.forEach(ring => this.ringHeights[ring] = { innerRadius, outerRadius })\n                const arcsWIthRing = this.generateArcs()\n                this.background.enqueue({ type: 'sections', input: arcsWIthRing })\n            })\n        }\n        this.ringHeights = ringHeights\n        this.background.enqueue({ type: \"sections\", input: this.generateArcs() })\n        this.background.dequeue()\n        this.getPathPoints()\n    }\n\n    removeRings() {\n        const { ringSet } = this\n        this.background.enqueue({ type: 'duration', input: 400 / ringSet.length })\n        ringSet.forEach((ring, i) => {\n            const { outerRadius } = this.ringHeights[ring]!\n            this.ringHeights[ring] = { innerRadius: outerRadius, outerRadius }\n            const arcsWIthRing = this.generateArcs()\n            this.background.enqueue({ type: 'sections', input: arcsWIthRing })\n            this.ringSet = ringSet.slice(i)\n            delete this.ringHeights[ring]\n        })\n        this.ringSet = []\n    }\n\n    getPathPoints() {\n        const { generator } = this\n        const sectionCoords: { [id: string]: [number, number][] } = {}\n        const sectionVerts: { [id: string]: [number, number][] } = {}\n        const arcs = this.generateArcs() //<--NOTE: destrcutring the method from \"this\" causes an error. look into that\n        arcs.forEach(function (d, i) {\n            if (d.id.includes('_border')) {\n                // triangulate the boarder polygon\n                const path = generator(d) || \"\",\n                    num_points = 100,\n                    points: number[] = [],\n                    pathProperties = new svgPathProperties(path),\n                    pathLength = pathProperties.getTotalLength()\n                for (let i = 0; i < num_points; ++i) {\n                    let { x, y } = pathProperties.getPointAtLength(i * pathLength / (num_points - 1))\n                    points.push(x)\n                    points.push(y)\n                }\n                const ears = earcut(points),//<--returns the indexes of x coordinates of the triangle vertices in the points array\n                    //fetch the coordiantes of the triangle vertices from the points array\n                    vertices = ears.reduce<[number, number][]>((acc, index) => {\n                        const i = index * 2\n                        return [...acc, [points[i]!, points[i + 1]!]]\n                    }, [])\n                sectionVerts[d.id] = vertices\n\n                //seed the positions within the boarder polygon\n                const coords: [number, number][] = []\n                for (let i = 0; i < 200; ++i) {\n                    const { startAngle, endAngle, innerRadius, outerRadius, id } = d\n                    if (id.includes('_border')) {\n                        const randomClampedR = Math.random() * (outerRadius - innerRadius) + innerRadius,\n                            randomClampedTheta = (Math.random() * (endAngle - startAngle) + startAngle) - Math.PI / 2,\n                            x = Math.cos(randomClampedTheta) * randomClampedR,\n                            y = Math.sin(randomClampedTheta) * randomClampedR\n                        coords.push([x, y])\n                    }\n                }\n                sectionCoords[d.id] = coords\n            }\n        })\n        self.postMessage({ sectionVerts, sectionCoords })\n    }\n}\n\nconst brw = new worker()\n\nself.addEventListener('message', msg => {\n    const {\n        type,\n        canvas,\n        w,\n        h,\n        r,\n        ringSet,\n        ringHeights,\n        sliceSet,\n        sliceAngles,\n        sliceColors\n    }:\n        {\n            type: string,\n            canvas?: OffscreenCanvas,\n            w?: number,\n            h?: number,\n            r?: number,\n            ringSet?: string[],\n            sliceSet?: string[],\n            ringHeights?: { [ring: string]: { innerRadius: number, outerRadius: number } }\n            sliceAngles?: { [slice: string]: { startAngle: number, endAngle: number } }\n            sliceColors?: { [slice: string]: string[] }\n        } = msg.data\n        \n    if (type === 'set_ctx' && canvas) {\n        const ctx = canvas.getContext('2d')\n        brw.setContext(ctx!)\n    }\n    if (type === 'set_dimensions' && w && h && r) {\n        brw.setDimensions(w, h, r)\n    }\n    if (type === 'init_chart' && ringSet && ringHeights && sliceSet && sliceAngles && sliceColors) {\n        brw.initChart(ringSet, ringHeights, sliceSet, sliceAngles, sliceColors)\n    }\n    if (type === 'update_slice_set' && sliceSet && sliceAngles && sliceColors) {\n        brw.updateSliceSet(sliceSet, sliceAngles, sliceColors)\n    }\n    if (type === 'update_ring_set' && ringSet && ringHeights) {\n        brw.updateRingSet(ringSet, ringHeights)\n    }\n    if (type === 'remove_rings') {\n        brw.removeRings()\n    }\n    if (type === 'remove_slices') {\n        brw.removeSlices()\n    }\n})","//this is probbaly overkill, but I want a real queue\nexport class Queue<T> implements QueueInterface<T> {\n    _oldestIndex = 1\n    _newestIndex = 1\n    _storage:{[index:number]:T} = {}\n\n    size(){\n        return this._newestIndex - this._oldestIndex\n    }\n\n    enqueue(datum:T){\n        this._storage[this._newestIndex] = datum\n        this._newestIndex++\n    }\n\n    dequeue(){\n        let oldestIndex = this._oldestIndex,\n        newestIndex = this._newestIndex,\n        deletedData;\n\n    if (oldestIndex !== newestIndex) {\n        deletedData = this._storage[oldestIndex];\n        delete this._storage[oldestIndex];\n        this._oldestIndex++;\n        return deletedData;\n    }\n    }\n}","// http://geoexamples.com/path-properties/ v1.0.13 Copyright 2022 Roger Veciana i Rovira\nfunction t(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function n(t){return function(t){if(Array.isArray(t))return e(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,n){if(!t)return;if(\"string\"==typeof t)return e(t,n);var i=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===i&&t.constructor&&(i=t.constructor.name);if(\"Map\"===i||\"Set\"===i)return Array.from(t);if(\"Arguments\"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return e(t,n)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function e(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,i=new Array(n);e<n;e++)i[e]=t[e];return i}var i={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},h=/([astvzqmhlc])([^astvzqmhlc]*)/gi,r=/-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi,s=function(t){var n=t.match(r);return n?n.map(Number):[]},a=function(n,e,i,h){var r=this;t(this,\"x0\",void 0),t(this,\"x1\",void 0),t(this,\"y0\",void 0),t(this,\"y1\",void 0),t(this,\"getTotalLength\",(function(){return Math.sqrt(Math.pow(r.x0-r.x1,2)+Math.pow(r.y0-r.y1,2))})),t(this,\"getPointAtLength\",(function(t){var n=t/Math.sqrt(Math.pow(r.x0-r.x1,2)+Math.pow(r.y0-r.y1,2));n=Number.isNaN(n)?1:n;var e=(r.x1-r.x0)*n,i=(r.y1-r.y0)*n;return{x:r.x0+e,y:r.y0+i}})),t(this,\"getTangentAtLength\",(function(t){var n=Math.sqrt((r.x1-r.x0)*(r.x1-r.x0)+(r.y1-r.y0)*(r.y1-r.y0));return{x:-(r.x1-r.x0)/n,y:-(r.y1-r.y0)/n}})),t(this,\"getPropertiesAtLength\",(function(t){var n=r.getPointAtLength(t),e=r.getTangentAtLength(t);return{x:n.x,y:n.y,tangentX:e.x,tangentY:e.y}})),this.x0=n,this.x1=e,this.y0=i,this.y1=h},o=function(n,e,i,h,r,s,a,o,l){var c=this;t(this,\"x0\",void 0),t(this,\"y0\",void 0),t(this,\"rx\",void 0),t(this,\"ry\",void 0),t(this,\"xAxisRotate\",void 0),t(this,\"LargeArcFlag\",void 0),t(this,\"SweepFlag\",void 0),t(this,\"x1\",void 0),t(this,\"y1\",void 0),t(this,\"length\",void 0),t(this,\"getTotalLength\",(function(){return c.length})),t(this,\"getPointAtLength\",(function(t){t<0?t=0:t>c.length&&(t=c.length);var n=g({x:c.x0,y:c.y0},c.rx,c.ry,c.xAxisRotate,c.LargeArcFlag,c.SweepFlag,{x:c.x1,y:c.y1},t/c.length);return{x:n.x,y:n.y}})),t(this,\"getTangentAtLength\",(function(t){t<0?t=0:t>c.length&&(t=c.length);var n,e=.05,i=c.getPointAtLength(t);t<0?t=0:t>c.length&&(t=c.length);var h=(n=t<c.length-e?c.getPointAtLength(t+e):c.getPointAtLength(t-e)).x-i.x,r=n.y-i.y,s=Math.sqrt(h*h+r*r);return t<c.length-e?{x:-h/s,y:-r/s}:{x:h/s,y:r/s}})),t(this,\"getPropertiesAtLength\",(function(t){var n=c.getTangentAtLength(t),e=c.getPointAtLength(t);return{x:e.x,y:e.y,tangentX:n.x,tangentY:n.y}})),this.x0=n,this.y0=e,this.rx=i,this.ry=h,this.xAxisRotate=r,this.LargeArcFlag=s,this.SweepFlag=a,this.x1=o,this.y1=l;var f=u(300,(function(t){return g({x:n,y:e},i,h,r,s,a,{x:o,y:l},t)}));this.length=f.arcLength},g=function(t,n,e,i,h,r,s,a){n=Math.abs(n),e=Math.abs(e),i=l(i,360);var o=c(i);if(t.x===s.x&&t.y===s.y)return{x:t.x,y:t.y,ellipticalArcAngle:0};if(0===n||0===e)return{x:0,y:0,ellipticalArcAngle:0};var g=(t.x-s.x)/2,u=(t.y-s.y)/2,f={x:Math.cos(o)*g+Math.sin(o)*u,y:-Math.sin(o)*g+Math.cos(o)*u},y=Math.pow(f.x,2)/Math.pow(n,2)+Math.pow(f.y,2)/Math.pow(e,2);y>1&&(n=Math.sqrt(y)*n,e=Math.sqrt(y)*e);var p=(Math.pow(n,2)*Math.pow(e,2)-Math.pow(n,2)*Math.pow(f.y,2)-Math.pow(e,2)*Math.pow(f.x,2))/(Math.pow(n,2)*Math.pow(f.y,2)+Math.pow(e,2)*Math.pow(f.x,2));p=p<0?0:p;var v=(h!==r?1:-1)*Math.sqrt(p),M=v*(n*f.y/e),L=v*(-e*f.x/n),w={x:Math.cos(o)*M-Math.sin(o)*L+(t.x+s.x)/2,y:Math.sin(o)*M+Math.cos(o)*L+(t.y+s.y)/2},A={x:(f.x-M)/n,y:(f.y-L)/e},d=x({x:1,y:0},A),P=x(A,{x:(-f.x-M)/n,y:(-f.y-L)/e});!r&&P>0?P-=2*Math.PI:r&&P<0&&(P+=2*Math.PI);var b=d+(P%=2*Math.PI)*a,T=n*Math.cos(b),m=e*Math.sin(b);return{x:Math.cos(o)*T-Math.sin(o)*m+w.x,y:Math.sin(o)*T+Math.cos(o)*m+w.y,ellipticalArcStartAngle:d,ellipticalArcEndAngle:d+P,ellipticalArcAngle:b,ellipticalArcCenter:w,resultantRx:n,resultantRy:e}},u=function(t,n){t=t||500;for(var e,i=0,h=[],r=[],s=n(0),a=0;a<t;a++){var o=y(a*(1/t),0,1);e=n(o),i+=f(s,e),r.push([s,e]),h.push({t:o,arcLength:i}),s=e}return e=n(1),r.push([s,e]),i+=f(s,e),h.push({t:1,arcLength:i}),{arcLength:i,arcLengthMap:h,approximationLines:r}},l=function(t,n){return(t%n+n)%n},c=function(t){return t*(Math.PI/180)},f=function(t,n){return Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2))},y=function(t,n,e){return Math.min(Math.max(t,n),e)},x=function(t,n){var e=t.x*n.x+t.y*n.y,i=Math.sqrt((Math.pow(t.x,2)+Math.pow(t.y,2))*(Math.pow(n.x,2)+Math.pow(n.y,2)));return(t.x*n.y-t.y*n.x<0?-1:1)*Math.acos(e/i)},p=[[],[],[-.5773502691896257,.5773502691896257],[0,-.7745966692414834,.7745966692414834],[-.33998104358485626,.33998104358485626,-.8611363115940526,.8611363115940526],[0,-.5384693101056831,.5384693101056831,-.906179845938664,.906179845938664],[.6612093864662645,-.6612093864662645,-.2386191860831969,.2386191860831969,-.932469514203152,.932469514203152],[0,.4058451513773972,-.4058451513773972,-.7415311855993945,.7415311855993945,-.9491079123427585,.9491079123427585],[-.1834346424956498,.1834346424956498,-.525532409916329,.525532409916329,-.7966664774136267,.7966664774136267,-.9602898564975363,.9602898564975363],[0,-.8360311073266358,.8360311073266358,-.9681602395076261,.9681602395076261,-.3242534234038089,.3242534234038089,-.6133714327005904,.6133714327005904],[-.14887433898163122,.14887433898163122,-.4333953941292472,.4333953941292472,-.6794095682990244,.6794095682990244,-.8650633666889845,.8650633666889845,-.9739065285171717,.9739065285171717],[0,-.26954315595234496,.26954315595234496,-.5190961292068118,.5190961292068118,-.7301520055740494,.7301520055740494,-.8870625997680953,.8870625997680953,-.978228658146057,.978228658146057],[-.1252334085114689,.1252334085114689,-.3678314989981802,.3678314989981802,-.5873179542866175,.5873179542866175,-.7699026741943047,.7699026741943047,-.9041172563704749,.9041172563704749,-.9815606342467192,.9815606342467192],[0,-.2304583159551348,.2304583159551348,-.44849275103644687,.44849275103644687,-.6423493394403402,.6423493394403402,-.8015780907333099,.8015780907333099,-.9175983992229779,.9175983992229779,-.9841830547185881,.9841830547185881],[-.10805494870734367,.10805494870734367,-.31911236892788974,.31911236892788974,-.5152486363581541,.5152486363581541,-.6872929048116855,.6872929048116855,-.827201315069765,.827201315069765,-.9284348836635735,.9284348836635735,-.9862838086968123,.9862838086968123],[0,-.20119409399743451,.20119409399743451,-.3941513470775634,.3941513470775634,-.5709721726085388,.5709721726085388,-.7244177313601701,.7244177313601701,-.8482065834104272,.8482065834104272,-.937273392400706,.937273392400706,-.9879925180204854,.9879925180204854],[-.09501250983763744,.09501250983763744,-.2816035507792589,.2816035507792589,-.45801677765722737,.45801677765722737,-.6178762444026438,.6178762444026438,-.755404408355003,.755404408355003,-.8656312023878318,.8656312023878318,-.9445750230732326,.9445750230732326,-.9894009349916499,.9894009349916499],[0,-.17848418149584785,.17848418149584785,-.3512317634538763,.3512317634538763,-.5126905370864769,.5126905370864769,-.6576711592166907,.6576711592166907,-.7815140038968014,.7815140038968014,-.8802391537269859,.8802391537269859,-.9506755217687678,.9506755217687678,-.9905754753144174,.9905754753144174],[-.0847750130417353,.0847750130417353,-.2518862256915055,.2518862256915055,-.41175116146284263,.41175116146284263,-.5597708310739475,.5597708310739475,-.6916870430603532,.6916870430603532,-.8037049589725231,.8037049589725231,-.8926024664975557,.8926024664975557,-.9558239495713977,.9558239495713977,-.9915651684209309,.9915651684209309],[0,-.16035864564022537,.16035864564022537,-.31656409996362983,.31656409996362983,-.46457074137596094,.46457074137596094,-.600545304661681,.600545304661681,-.7209661773352294,.7209661773352294,-.8227146565371428,.8227146565371428,-.9031559036148179,.9031559036148179,-.96020815213483,.96020815213483,-.9924068438435844,.9924068438435844],[-.07652652113349734,.07652652113349734,-.22778585114164507,.22778585114164507,-.37370608871541955,.37370608871541955,-.5108670019508271,.5108670019508271,-.636053680726515,.636053680726515,-.7463319064601508,.7463319064601508,-.8391169718222188,.8391169718222188,-.912234428251326,.912234428251326,-.9639719272779138,.9639719272779138,-.9931285991850949,.9931285991850949],[0,-.1455618541608951,.1455618541608951,-.2880213168024011,.2880213168024011,-.4243421202074388,.4243421202074388,-.5516188358872198,.5516188358872198,-.6671388041974123,.6671388041974123,-.7684399634756779,.7684399634756779,-.8533633645833173,.8533633645833173,-.9200993341504008,.9200993341504008,-.9672268385663063,.9672268385663063,-.9937521706203895,.9937521706203895],[-.06973927331972223,.06973927331972223,-.20786042668822127,.20786042668822127,-.34193582089208424,.34193582089208424,-.469355837986757,.469355837986757,-.5876404035069116,.5876404035069116,-.6944872631866827,.6944872631866827,-.7878168059792081,.7878168059792081,-.8658125777203002,.8658125777203002,-.926956772187174,.926956772187174,-.9700604978354287,.9700604978354287,-.9942945854823992,.9942945854823992],[0,-.1332568242984661,.1332568242984661,-.26413568097034495,.26413568097034495,-.3903010380302908,.3903010380302908,-.5095014778460075,.5095014778460075,-.6196098757636461,.6196098757636461,-.7186613631319502,.7186613631319502,-.8048884016188399,.8048884016188399,-.8767523582704416,.8767523582704416,-.9329710868260161,.9329710868260161,-.9725424712181152,.9725424712181152,-.9947693349975522,.9947693349975522],[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213]],v=[[],[],[1,1],[.8888888888888888,.5555555555555556,.5555555555555556],[.6521451548625461,.6521451548625461,.34785484513745385,.34785484513745385],[.5688888888888889,.47862867049936647,.47862867049936647,.23692688505618908,.23692688505618908],[.3607615730481386,.3607615730481386,.46791393457269104,.46791393457269104,.17132449237917036,.17132449237917036],[.4179591836734694,.3818300505051189,.3818300505051189,.27970539148927664,.27970539148927664,.1294849661688697,.1294849661688697],[.362683783378362,.362683783378362,.31370664587788727,.31370664587788727,.22238103445337448,.22238103445337448,.10122853629037626,.10122853629037626],[.3302393550012598,.1806481606948574,.1806481606948574,.08127438836157441,.08127438836157441,.31234707704000286,.31234707704000286,.26061069640293544,.26061069640293544],[.29552422471475287,.29552422471475287,.26926671930999635,.26926671930999635,.21908636251598204,.21908636251598204,.1494513491505806,.1494513491505806,.06667134430868814,.06667134430868814],[.2729250867779006,.26280454451024665,.26280454451024665,.23319376459199048,.23319376459199048,.18629021092773426,.18629021092773426,.1255803694649046,.1255803694649046,.05566856711617366,.05566856711617366],[.24914704581340277,.24914704581340277,.2334925365383548,.2334925365383548,.20316742672306592,.20316742672306592,.16007832854334622,.16007832854334622,.10693932599531843,.10693932599531843,.04717533638651183,.04717533638651183],[.2325515532308739,.22628318026289723,.22628318026289723,.2078160475368885,.2078160475368885,.17814598076194574,.17814598076194574,.13887351021978725,.13887351021978725,.09212149983772845,.09212149983772845,.04048400476531588,.04048400476531588],[.2152638534631578,.2152638534631578,.2051984637212956,.2051984637212956,.18553839747793782,.18553839747793782,.15720316715819355,.15720316715819355,.12151857068790319,.12151857068790319,.08015808715976021,.08015808715976021,.03511946033175186,.03511946033175186],[.2025782419255613,.19843148532711158,.19843148532711158,.1861610000155622,.1861610000155622,.16626920581699392,.16626920581699392,.13957067792615432,.13957067792615432,.10715922046717194,.10715922046717194,.07036604748810812,.07036604748810812,.03075324199611727,.03075324199611727],[.1894506104550685,.1894506104550685,.18260341504492358,.18260341504492358,.16915651939500254,.16915651939500254,.14959598881657674,.14959598881657674,.12462897125553388,.12462897125553388,.09515851168249279,.09515851168249279,.062253523938647894,.062253523938647894,.027152459411754096,.027152459411754096],[.17944647035620653,.17656270536699264,.17656270536699264,.16800410215645004,.16800410215645004,.15404576107681028,.15404576107681028,.13513636846852548,.13513636846852548,.11188384719340397,.11188384719340397,.08503614831717918,.08503614831717918,.0554595293739872,.0554595293739872,.02414830286854793,.02414830286854793],[.1691423829631436,.1691423829631436,.16427648374583273,.16427648374583273,.15468467512626524,.15468467512626524,.14064291467065065,.14064291467065065,.12255520671147846,.12255520671147846,.10094204410628717,.10094204410628717,.07642573025488905,.07642573025488905,.0497145488949698,.0497145488949698,.02161601352648331,.02161601352648331],[.1610544498487837,.15896884339395434,.15896884339395434,.15276604206585967,.15276604206585967,.1426067021736066,.1426067021736066,.12875396253933621,.12875396253933621,.11156664554733399,.11156664554733399,.09149002162245,.09149002162245,.06904454273764123,.06904454273764123,.0448142267656996,.0448142267656996,.019461788229726478,.019461788229726478],[.15275338713072584,.15275338713072584,.14917298647260374,.14917298647260374,.14209610931838204,.14209610931838204,.13168863844917664,.13168863844917664,.11819453196151841,.11819453196151841,.10193011981724044,.10193011981724044,.08327674157670475,.08327674157670475,.06267204833410907,.06267204833410907,.04060142980038694,.04060142980038694,.017614007139152118,.017614007139152118],[.14608113364969041,.14452440398997005,.14452440398997005,.13988739479107315,.13988739479107315,.13226893863333747,.13226893863333747,.12183141605372853,.12183141605372853,.10879729916714838,.10879729916714838,.09344442345603386,.09344442345603386,.0761001136283793,.0761001136283793,.057134425426857205,.057134425426857205,.036953789770852494,.036953789770852494,.016017228257774335,.016017228257774335],[.13925187285563198,.13925187285563198,.13654149834601517,.13654149834601517,.13117350478706238,.13117350478706238,.12325237681051242,.12325237681051242,.11293229608053922,.11293229608053922,.10041414444288096,.10041414444288096,.08594160621706773,.08594160621706773,.06979646842452049,.06979646842452049,.052293335152683286,.052293335152683286,.03377490158481415,.03377490158481415,.0146279952982722,.0146279952982722],[.13365457218610619,.1324620394046966,.1324620394046966,.12890572218808216,.12890572218808216,.12304908430672953,.12304908430672953,.11499664022241136,.11499664022241136,.10489209146454141,.10489209146454141,.09291576606003515,.09291576606003515,.07928141177671895,.07928141177671895,.06423242140852585,.06423242140852585,.04803767173108467,.04803767173108467,.030988005856979445,.030988005856979445,.013411859487141771,.013411859487141771],[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872]],M=[[1],[1,1],[1,2,1],[1,3,3,1]],L=function(t,n,e){return{x:(1-e)*(1-e)*(1-e)*t[0]+3*(1-e)*(1-e)*e*t[1]+3*(1-e)*e*e*t[2]+e*e*e*t[3],y:(1-e)*(1-e)*(1-e)*n[0]+3*(1-e)*(1-e)*e*n[1]+3*(1-e)*e*e*n[2]+e*e*e*n[3]}},w=function(t,n,e){return d([3*(t[1]-t[0]),3*(t[2]-t[1]),3*(t[3]-t[2])],[3*(n[1]-n[0]),3*(n[2]-n[1]),3*(n[3]-n[2])],e)},A=function(t,n,e){var i,h,r;i=e/2,h=0;for(var s=0;s<20;s++)r=i*p[20][s]+i,h+=v[20][s]*T(t,n,r);return i*h},d=function(t,n,e){return{x:(1-e)*(1-e)*t[0]+2*(1-e)*e*t[1]+e*e*t[2],y:(1-e)*(1-e)*n[0]+2*(1-e)*e*n[1]+e*e*n[2]}},P=function(t,n,e){void 0===e&&(e=1);var i=t[0]-2*t[1]+t[2],h=n[0]-2*n[1]+n[2],r=2*t[1]-2*t[0],s=2*n[1]-2*n[0],a=4*(i*i+h*h),o=4*(i*r+h*s),g=r*r+s*s;if(0===a)return e*Math.sqrt(Math.pow(t[2]-t[0],2)+Math.pow(n[2]-n[0],2));var u=o/(2*a),l=e+u,c=g/a-u*u,f=l*l+c>0?Math.sqrt(l*l+c):0,y=u*u+c>0?Math.sqrt(u*u+c):0,x=u+Math.sqrt(u*u+c)!==0?c*Math.log(Math.abs((l+f)/(u+y))):0;return Math.sqrt(a)/2*(l*f-u*y+x)},b=function(t,n,e){return{x:2*(1-e)*(t[1]-t[0])+2*e*(t[2]-t[1]),y:2*(1-e)*(n[1]-n[0])+2*e*(n[2]-n[1])}};function T(t,n,e){var i=m(1,e,t),h=m(1,e,n),r=i*i+h*h;return Math.sqrt(r)}var m=function t(n,e,i){var h,r,s=i.length-1;if(0===s)return 0;if(0===n){r=0;for(var a=0;a<=s;a++)r+=M[s][a]*Math.pow(1-e,s-a)*Math.pow(e,a)*i[a];return r}h=new Array(s);for(var o=0;o<s;o++)h[o]=s*(i[o+1]-i[o]);return t(n-1,e,h)},q=function(t,n,e){for(var i=1,h=t/n,r=(t-e(h))/n,s=0;i>.001;){var a=e(h+r),o=Math.abs(t-a)/n;if(o<i)i=o,h+=r;else{var g=e(h-r),u=Math.abs(t-g)/n;u<i?(i=u,h-=r):r/=2}if(++s>500)break}return h},_=function(n,e,i,h,r,s,a,o){var g=this;t(this,\"a\",void 0),t(this,\"b\",void 0),t(this,\"c\",void 0),t(this,\"d\",void 0),t(this,\"length\",void 0),t(this,\"getArcLength\",void 0),t(this,\"getPoint\",void 0),t(this,\"getDerivative\",void 0),t(this,\"getTotalLength\",(function(){return g.length})),t(this,\"getPointAtLength\",(function(t){var n=[g.a.x,g.b.x,g.c.x,g.d.x],e=[g.a.y,g.b.y,g.c.y,g.d.y],i=q(t,g.length,(function(t){return g.getArcLength(n,e,t)}));return g.getPoint(n,e,i)})),t(this,\"getTangentAtLength\",(function(t){var n=[g.a.x,g.b.x,g.c.x,g.d.x],e=[g.a.y,g.b.y,g.c.y,g.d.y],i=q(t,g.length,(function(t){return g.getArcLength(n,e,t)})),h=g.getDerivative(n,e,i),r=Math.sqrt(h.x*h.x+h.y*h.y);return r>0?{x:h.x/r,y:h.y/r}:{x:0,y:0}})),t(this,\"getPropertiesAtLength\",(function(t){var n,e=[g.a.x,g.b.x,g.c.x,g.d.x],i=[g.a.y,g.b.y,g.c.y,g.d.y],h=q(t,g.length,(function(t){return g.getArcLength(e,i,t)})),r=g.getDerivative(e,i,h),s=Math.sqrt(r.x*r.x+r.y*r.y);n=s>0?{x:r.x/s,y:r.y/s}:{x:0,y:0};var a=g.getPoint(e,i,h);return{x:a.x,y:a.y,tangentX:n.x,tangentY:n.y}})),t(this,\"getC\",(function(){return g.c})),t(this,\"getD\",(function(){return g.d})),this.a={x:n,y:e},this.b={x:i,y:h},this.c={x:r,y:s},void 0!==a&&void 0!==o?(this.getArcLength=A,this.getPoint=L,this.getDerivative=w,this.d={x:a,y:o}):(this.getArcLength=P,this.getPoint=d,this.getDerivative=b,this.d={x:0,y:0}),this.length=this.getArcLength([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],1)},S=function(e){var r=this;t(this,\"length\",0),t(this,\"partial_lengths\",[]),t(this,\"functions\",[]),t(this,\"initial_point\",null),t(this,\"getPartAtLength\",(function(t){t<0?t=0:t>r.length&&(t=r.length);for(var n=r.partial_lengths.length-1;r.partial_lengths[n]>=t&&n>0;)n--;return n++,{fraction:t-r.partial_lengths[n-1],i:n}})),t(this,\"getTotalLength\",(function(){return r.length})),t(this,\"getPointAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getPointAtLength(n.fraction);if(r.initial_point)return r.initial_point;throw new Error(\"Wrong function at this part.\")})),t(this,\"getTangentAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getTangentAtLength(n.fraction);if(r.initial_point)return{x:0,y:0};throw new Error(\"Wrong function at this part.\")})),t(this,\"getPropertiesAtLength\",(function(t){var n=r.getPartAtLength(t),e=r.functions[n.i];if(e)return e.getPropertiesAtLength(n.fraction);if(r.initial_point)return{x:r.initial_point.x,y:r.initial_point.y,tangentX:0,tangentY:0};throw new Error(\"Wrong function at this part.\")})),t(this,\"getParts\",(function(){for(var t=[],n=0;n<r.functions.length;n++)if(null!==r.functions[n]){r.functions[n]=r.functions[n];var e={start:r.functions[n].getPointAtLength(0),end:r.functions[n].getPointAtLength(r.partial_lengths[n]-r.partial_lengths[n-1]),length:r.partial_lengths[n]-r.partial_lengths[n-1],getPointAtLength:r.functions[n].getPointAtLength,getTangentAtLength:r.functions[n].getTangentAtLength,getPropertiesAtLength:r.functions[n].getPropertiesAtLength};t.push(e)}return t}));for(var g,u=Array.isArray(e)?e:function(t){var e=(t&&t.length>0?t:\"M0,0\").match(h);if(!e)throw new Error(\"No path elements found in string \".concat(t));return e.reduce((function(t,e){var h=e.charAt(0),r=h.toLowerCase(),a=s(e.substr(1));for(\"m\"===r&&a.length>2&&(t.push([h].concat(n(a.splice(0,2)))),r=\"l\",h=\"m\"===h?\"l\":\"L\");a.length>=0;){if(a.length===i[r]){t.push([h].concat(n(a.splice(0,i[r]))));break}if(a.length<i[r])throw new Error('Malformed path data: \"'.concat(h,'\" must have ').concat(i[r],\" elements and has \").concat(a.length,\": \").concat(e));t.push([h].concat(n(a.splice(0,i[r]))))}return t}),[])}(e),l=[0,0],c=[0,0],f=[0,0],y=0;y<u.length;y++){if(\"M\"===u[y][0])f=[(l=[u[y][1],u[y][2]])[0],l[1]],this.functions.push(null),0===y&&(this.initial_point={x:u[y][1],y:u[y][2]});else if(\"m\"===u[y][0])f=[(l=[u[y][1]+l[0],u[y][2]+l[1]])[0],l[1]],this.functions.push(null);else if(\"L\"===u[y][0])this.length+=Math.sqrt(Math.pow(l[0]-u[y][1],2)+Math.pow(l[1]-u[y][2],2)),this.functions.push(new a(l[0],u[y][1],l[1],u[y][2])),l=[u[y][1],u[y][2]];else if(\"l\"===u[y][0])this.length+=Math.sqrt(Math.pow(u[y][1],2)+Math.pow(u[y][2],2)),this.functions.push(new a(l[0],u[y][1]+l[0],l[1],u[y][2]+l[1])),l=[u[y][1]+l[0],u[y][2]+l[1]];else if(\"H\"===u[y][0])this.length+=Math.abs(l[0]-u[y][1]),this.functions.push(new a(l[0],u[y][1],l[1],l[1])),l[0]=u[y][1];else if(\"h\"===u[y][0])this.length+=Math.abs(u[y][1]),this.functions.push(new a(l[0],l[0]+u[y][1],l[1],l[1])),l[0]=u[y][1]+l[0];else if(\"V\"===u[y][0])this.length+=Math.abs(l[1]-u[y][1]),this.functions.push(new a(l[0],l[0],l[1],u[y][1])),l[1]=u[y][1];else if(\"v\"===u[y][0])this.length+=Math.abs(u[y][1]),this.functions.push(new a(l[0],l[0],l[1],l[1]+u[y][1])),l[1]=u[y][1]+l[1];else if(\"z\"===u[y][0]||\"Z\"===u[y][0])this.length+=Math.sqrt(Math.pow(f[0]-l[0],2)+Math.pow(f[1]-l[1],2)),this.functions.push(new a(l[0],f[0],l[1],f[1])),l=[f[0],f[1]];else if(\"C\"===u[y][0])g=new _(l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4],u[y][5],u[y][6]),this.length+=g.getTotalLength(),l=[u[y][5],u[y][6]],this.functions.push(g);else if(\"c\"===u[y][0])(g=new _(l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4],l[0]+u[y][5],l[1]+u[y][6])).getTotalLength()>0?(this.length+=g.getTotalLength(),this.functions.push(g),l=[u[y][5]+l[0],u[y][6]+l[1]]):this.functions.push(new a(l[0],l[0],l[1],l[1]));else if(\"S\"===u[y][0]){if(y>0&&[\"C\",\"c\",\"S\",\"s\"].indexOf(u[y-1][0])>-1){if(g){var x=g.getC();g=new _(l[0],l[1],2*l[0]-x.x,2*l[1]-x.y,u[y][1],u[y][2],u[y][3],u[y][4])}}else g=new _(l[0],l[1],l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4]);g&&(this.length+=g.getTotalLength(),l=[u[y][3],u[y][4]],this.functions.push(g))}else if(\"s\"===u[y][0]){if(y>0&&[\"C\",\"c\",\"S\",\"s\"].indexOf(u[y-1][0])>-1){if(g){var p=g.getC(),v=g.getD();g=new _(l[0],l[1],l[0]+v.x-p.x,l[1]+v.y-p.y,l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4])}}else g=new _(l[0],l[1],l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4]);g&&(this.length+=g.getTotalLength(),l=[u[y][3]+l[0],u[y][4]+l[1]],this.functions.push(g))}else if(\"Q\"===u[y][0]){if(l[0]==u[y][1]&&l[1]==u[y][2]){var M=new a(u[y][1],u[y][3],u[y][2],u[y][4]);this.length+=M.getTotalLength(),this.functions.push(M)}else g=new _(l[0],l[1],u[y][1],u[y][2],u[y][3],u[y][4],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);l=[u[y][3],u[y][4]],c=[u[y][1],u[y][2]]}else if(\"q\"===u[y][0]){if(0!=u[y][1]||0!=u[y][2])g=new _(l[0],l[1],l[0]+u[y][1],l[1]+u[y][2],l[0]+u[y][3],l[1]+u[y][4],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);else{var L=new a(l[0]+u[y][1],l[0]+u[y][3],l[1]+u[y][2],l[1]+u[y][4]);this.length+=L.getTotalLength(),this.functions.push(L)}c=[l[0]+u[y][1],l[1]+u[y][2]],l=[u[y][3]+l[0],u[y][4]+l[1]]}else if(\"T\"===u[y][0]){if(y>0&&[\"Q\",\"q\",\"T\",\"t\"].indexOf(u[y-1][0])>-1)g=new _(l[0],l[1],2*l[0]-c[0],2*l[1]-c[1],u[y][1],u[y][2],void 0,void 0),this.functions.push(g),this.length+=g.getTotalLength();else{var w=new a(l[0],u[y][1],l[1],u[y][2]);this.functions.push(w),this.length+=w.getTotalLength()}c=[2*l[0]-c[0],2*l[1]-c[1]],l=[u[y][1],u[y][2]]}else if(\"t\"===u[y][0]){if(y>0&&[\"Q\",\"q\",\"T\",\"t\"].indexOf(u[y-1][0])>-1)g=new _(l[0],l[1],2*l[0]-c[0],2*l[1]-c[1],l[0]+u[y][1],l[1]+u[y][2],void 0,void 0),this.length+=g.getTotalLength(),this.functions.push(g);else{var A=new a(l[0],l[0]+u[y][1],l[1],l[1]+u[y][2]);this.length+=A.getTotalLength(),this.functions.push(A)}c=[2*l[0]-c[0],2*l[1]-c[1]],l=[u[y][1]+l[0],u[y][2]+l[1]]}else if(\"A\"===u[y][0]){var d=new o(l[0],l[1],u[y][1],u[y][2],u[y][3],1===u[y][4],1===u[y][5],u[y][6],u[y][7]);this.length+=d.getTotalLength(),l=[u[y][6],u[y][7]],this.functions.push(d)}else if(\"a\"===u[y][0]){var P=new o(l[0],l[1],u[y][1],u[y][2],u[y][3],1===u[y][4],1===u[y][5],l[0]+u[y][6],l[1]+u[y][7]);this.length+=P.getTotalLength(),l=[l[0]+u[y][6],l[1]+u[y][7]],this.functions.push(P)}this.partial_lengths.push(this.length)}},C=function(n){var e=this;if(t(this,\"inst\",void 0),t(this,\"getTotalLength\",(function(){return e.inst.getTotalLength()})),t(this,\"getPointAtLength\",(function(t){return e.inst.getPointAtLength(t)})),t(this,\"getTangentAtLength\",(function(t){return e.inst.getTangentAtLength(t)})),t(this,\"getPropertiesAtLength\",(function(t){return e.inst.getPropertiesAtLength(t)})),t(this,\"getParts\",(function(){return e.inst.getParts()})),this.inst=new S(n),!(this instanceof C))return new C(n)};export{C as svgPathProperties};\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n"],"names":["$4wXTk","parcelRequire","$e66c1d2470470c6c$export$3dc07afe418952bc","_oldestIndex","_newestIndex","_storage","size","this","enqueue","datum","dequeue","deletedData","oldestIndex","$a112e980dd298f04$var$t","t","n","e","Object","defineProperty","value","enumerable","configurable","writable","$a112e980dd298f04$var$n","Array","isArray","$a112e980dd298f04$var$e","Symbol","iterator","from","i","prototype","toString","call","slice","constructor","name","test","TypeError","length","$a112e980dd298f04$var$i","a","c","h","l","m","q","s","v","z","$a112e980dd298f04$var$h","$a112e980dd298f04$var$r","$a112e980dd298f04$var$a","r","Math","sqrt","pow","x0","x1","y0","y1","Number","isNaN","x","y","getPointAtLength","getTangentAtLength","tangentX","tangentY","$a112e980dd298f04$var$o","o","$a112e980dd298f04$var$g","rx","ry","xAxisRotate","LargeArcFlag","SweepFlag","f","$a112e980dd298f04$var$u","arcLength","abs","$a112e980dd298f04$var$l","$a112e980dd298f04$var$c","ellipticalArcAngle","g","u","cos","sin","p","M","L","w","A","d","$a112e980dd298f04$var$x","P","PI","b","T","ellipticalArcStartAngle","ellipticalArcEndAngle","ellipticalArcCenter","resultantRx","resultantRy","$a112e980dd298f04$var$y","$a112e980dd298f04$var$f","push","arcLengthMap","approximationLines","min","max","acos","$a112e980dd298f04$var$p","$a112e980dd298f04$var$v","$a112e980dd298f04$var$M","$a112e980dd298f04$var$L","$a112e980dd298f04$var$w","$a112e980dd298f04$var$d","$a112e980dd298f04$var$A","$a112e980dd298f04$var$T","$a112e980dd298f04$var$P","log","$a112e980dd298f04$var$b","$a112e980dd298f04$var$m","$a112e980dd298f04$var$q","$a112e980dd298f04$var$_","getArcLength","getPoint","getDerivative","$a112e980dd298f04$var$S","partial_lengths","fraction","getPartAtLength","functions","initial_point","Error","getPropertiesAtLength","start","end","match","concat","reduce","charAt","toLowerCase","map","$a112e980dd298f04$var$s","substr","splice","getTotalLength","indexOf","getC","getD","$a112e980dd298f04$export$56776403033771b1","inst","getParts","$4c90258534db95a8$var$earcut","data","holeIndices","dim","minX","minY","maxX","maxY","invSize","hasHoles","outerLen","outerNode","$4c90258534db95a8$var$linkedList","triangles","next","prev","len","list","queue","steiner","$4c90258534db95a8$var$getLeftmost","sort","$4c90258534db95a8$var$compareX","$4c90258534db95a8$var$eliminateHole","$4c90258534db95a8$var$eliminateHoles","$4c90258534db95a8$var$earcutLinked","clockwise","last","$4c90258534db95a8$var$signedArea","$4c90258534db95a8$var$insertNode","$4c90258534db95a8$var$equals","$4c90258534db95a8$var$removeNode","$4c90258534db95a8$var$filterPoints","again","$4c90258534db95a8$var$area","ear","pass","$4c90258534db95a8$var$zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","$4c90258534db95a8$var$sortLinked","$4c90258534db95a8$var$indexCurve","stop","$4c90258534db95a8$var$isEarHashed","$4c90258534db95a8$var$isEar","$4c90258534db95a8$var$cureLocalIntersections","$4c90258534db95a8$var$splitEarcut","ax","bx","cx","ay","by","cy","$4c90258534db95a8$var$pointInTriangle","minZ","maxZ","$4c90258534db95a8$var$intersects","$4c90258534db95a8$var$locallyInside","$4c90258534db95a8$var$isValidDiagonal","$4c90258534db95a8$var$splitPolygon","hole","bridge","hx","hy","qx","Infinity","tan","mx","my","tanMin","$4c90258534db95a8$var$sectorContainsSector","$4c90258534db95a8$var$findHoleBridge","bridgeReverse","leftmost","px","py","$4c90258534db95a8$var$intersectsPolygon","inside","$4c90258534db95a8$var$middleInside","p1","p2","q1","q2","o1","$4c90258534db95a8$var$sign","o2","o3","o4","$4c90258534db95a8$var$onSegment","num","a2","$4c90258534db95a8$var$Node","b2","an","bp","sum","j","$4c90258534db95a8$exports","default","deviation","polygonArea","trianglesArea","flatten","result","vertices","holes","dimensions","holeIndex","$4ac34dd61ff1357d$var$DOMImplementation","$parcel$interopDefault","DOMImplementation","self","$4ac34dd61ff1357d$var$brw","background","$gVAGA","ctx","canvasHeight","canvasWidth","dom","createDocument","ratio","generator","$35YzH","ringSet","ringHeights","sliceSet","sliceAngles","sliceColors","path","innerRadius","outerRadius","startAngle","endAngle","poly","setContext","setDimensions","draw","save","clearRect","floor","lineWidth","setTransform","select","selectAll","each","id","attr","fill","svgPath","strokeStyle","fillStyle","globalAlpha","includes","stroke","Path2D","restore","generateArcs","acc","sections","ring","slicePallet","arc","border","initChart","initialSections","flatMap","type","input","interpolator","interpolate","updateSliceAngles","updateSliceSet","oldSliceSet","fromEntries","startSlices","getPathPoints","endSlices","removeSlices","outGointSliceAngles","leavingArcs","updateRingSet","oldRingSet","startingHeights","forEach","intermediateRingSet","arcsWIthRing","removeRings","sectionCoords","sectionVerts","num_points","points","pathProperties","pathLength","index","coords","randomClampedR","random","randomClampedTheta","postMessage","addEventListener","msg","canvas","getContext"],"version":3,"file":"backgroundWorker.061b5c34.js.map"}